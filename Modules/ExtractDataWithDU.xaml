<Activity mc:Ignorable="sap sap2010" x:Class="ExtractDataWithDU" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:p="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:p1="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:p10="http://schemas.uipath.com/workflow/activities/document-processing-contracts/extraction" xmlns:p2="http://schemas.uipath.com/workflow/activities/ocr" xmlns:p3="http://schemas.uipath.com/workflow/activities/intelligentocr/classification" xmlns:p4="http://schemas.uipath.com/workflow/activities/documentunderstanding-ml" xmlns:p5="http://schemas.uipath.com/workflow/activities/document-processing-contracts/classification" xmlns:p6="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p7="http://schemas.uipath.com/workflow/activities/intelligentocr/training" xmlns:p8="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:p9="http://schemas.uipath.com/workflow/activities/intelligentocr/extraction" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing.Common" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing.Primitives" xmlns:sd2="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:um="clr-namespace:UiPath.MLServices;assembly=UiPath.MLServices" xmlns:uma="clr-namespace:UiPath.MLServices.Activities;assembly=UiPath.MLServices.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_Taxonomy" Type="InArgument(p:DocumentTaxonomy)" />
    <x:Property Name="in_strDocumentPath" Type="InArgument(x:String)" />
    <x:Property Name="in_strDocumentType" Type="InArgument(x:String)" />
    <x:Property Name="in_dblMinimumAgreedClassifierConfidence" Type="InArgument(x:Double)" />
    <x:Property Name="in_dblMinimumAgreedOCRClassifierConfidence" Type="InArgument(x:Double)" />
    <x:Property Name="BreakTriggerScopeInArgument" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>2206,2769</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ExtractDataWithDU_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="106">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Digitization</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Classification</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DocumentClassification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Training</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Training</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DataExtraction</x:String>
      <x:String>UiPath.SmartData.PositionBasedExtraction.Storage</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Vision.Core.OCR</x:String>
      <x:String>UiPath.DocumentUnderstanding.ML.Activities</x:String>
      <x:String>UiPath.DocumentUnderstanding.ML.Activities.Editors</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.ValidationStation</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Text.Json.Nodes</x:String>
      <x:String>UiPath.Web.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="132">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.SmartData.PositionBasedExtraction</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.OmniPage.Core</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.Text.Json</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="ExtractDataWithDU" sap:VirtualizedContainerService.HintSize="1164,2704" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="strDigitalText" />
      <Variable x:TypeArguments="p6:Document" Name="DOM" />
      <Variable x:TypeArguments="p8:ClassificationResult[]" Name="classificationResults" />
      <Variable x:TypeArguments="p8:ExtractionResult" Name="extractionResults" />
      <Variable x:TypeArguments="p8:ExtractionResult" Name="validatedExtractionResults" />
      <Variable x:TypeArguments="x:String" Name="strDate" />
      <Variable x:TypeArguments="x:String" Name="strShop" />
      <Variable x:TypeArguments="x:String" Name="strTotalAmount" />
      <Variable x:TypeArguments="x:String" Name="strCurrency" />
      <Variable x:TypeArguments="x:String" Name="strItems">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="boolDateExtracted" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="boolShopExtracted" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="boolTotalAmountExtracted" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="boolCurrencyExtracted" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="boolItemsExtracted" />
      <Variable x:TypeArguments="p8:ExtractionResult" Name="extractionResultsOCR1" />
      <Variable x:TypeArguments="x:String" Name="jsonResponse" />
      <Variable x:TypeArguments="njl:JObject" Name="local_OutputJson" />
      <Variable x:TypeArguments="x:Int32" Name="intNoOfObjectsFound" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">800,22.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">830,97.5 830,157.5</av:PointCollection>
        <x:Double x:Key="Height">2667</x:Double>
        <x:Double x:Key="Width">1130</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID30</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID10">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">730,267.5</av:Point>
          <av:Size x:Key="ShapeSize">200,68</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">830,335.5 830,389.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <p1:LoadTaxonomy DisplayName="Load Taxonomy" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="LoadTaxonomy_1" Taxonomy="[in_Taxonomy]" />
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID27">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">730,389.5</av:Point>
              <av:Size x:Key="ShapeSize">200,81</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">830,470.5 830,546.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Object Detection" sap:VirtualizedContainerService.HintSize="496,936" sap2010:WorkflowViewState.IdRef="Sequence_204">
            <Sequence.Variables>
              <Variable x:TypeArguments="njl:JArray" Name="jsonArray" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <uma:MLSkills ApiKey="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" Name="{x:Null}" NumberOfRetries="{x:Null}" ResponseHeaders="{x:Null}" Result="{x:Null}" SelectedMLSkill="{x:Reference __ReferenceID0}" SkillURL="{x:Null}" StatusCode="{x:Null}" TimeOutMs="{x:Null}" Connection="Robot" DisplayName="Invoke Object Detection" ExternApiFileType="JSON" sap:VirtualizedContainerService.HintSize="434,411" sap2010:WorkflowViewState.IdRef="MLSkills_1" Item="[in_strDocumentPath]" JsonResponse="[jsonResponse]" NextPageNum="2" RefreshList="False" TotalCount="1">
              <uma:MLSkills.MLSkillList>
                <scg:List x:TypeArguments="um:MLSkill" Capacity="4">
                  <um:MLSkill x:Name="__ReferenceID0" AccessUri="https://ai-uipath-we-b.deskover.com/mlskills/dc74acc0-b162-4acb-be4f-5c53944e8deb/456784e5-bbb0-4a08-9983-57cde6eeefd9/cluster-b/objectdetecionskill" AccountId="dc74acc0-b162-4acb-be4f-5c53944e8deb" Description="Skill used to identify multiple receipts in one image." Id="572075d1-ee61-42c8-a58c-05680b4f40e3" InputDescription="Path to the image to be analyzed." InputType="FILE" Name="ObjectDetecionSkill" OutputDescription="JSON with identified object's class byte array representation (allows you to see box around objects), identified object's class - name, score (between 0-1) and bounding_boxes coordinates. Example: {&quot;Predicted ByteArray&quot;: &quot;/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgI…TD&quot;, &quot;Predicted Class&quot;: [{&quot;class&quot;: &quot;book&quot;, &quot;score&quot;: &quot; 0.65&quot;, &quot;bounding_box&quot;: [38.348690032958984, 274.14703369140625, 116.80537414550781, 306.26788330078125]}, {&quot;class&quot;: &quot;book&quot;, &quot;score&quot;: &quot; 0.62&quot;, &quot;bounding_box&quot;: [34.108882904052734, 236.6508331298828, 118.49102783203125, 272.1687316894531]}]}" ProjectId="2f68327c-aa75-4ab2-af1a-e0e1c080e500" TenantId="456784e5-bbb0-4a08-9983-57cde6eeefd9" />
                </scg:List>
              </uma:MLSkills.MLSkillList>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </uma:MLSkills>
            <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_4" JsonObject="[local_OutputJson]" JsonString="[jsonResponse]" />
            <ui:DeserializeJsonArray DisplayName="Deserialize JSON Array" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="DeserializeJsonArray_2" JsonArray="[jsonArray]" JsonString="[local_OutputJson(&quot;Predicted Class&quot;).ToString]" />
            <Assign DisplayName="Assign - no of objects found in Document" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_117">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[intNoOfObjectsFound]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[jsonArray.Count]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="CommentOut_32">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="512,234" sap2010:WorkflowViewState.IdRef="Sequence_206">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence sap2010:Annotation.AnnotationText="Convert byte array to image and write the output image in project folder as &quot;PredictedOutput.png&quot;" DisplayName="Convert_ByteArray_to_Image" sap:VirtualizedContainerService.HintSize="450,123" sap2010:WorkflowViewState.IdRef="Sequence_205">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="s:Byte[]" Name="local_ByteArray" />
                      <Variable x:TypeArguments="x:String" Name="local_Base64Str" />
                      <Variable x:TypeArguments="s:Byte[]" Name="local_ConvertedByteArray" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap2010:Annotation.AnnotationText="Converts string to byte array" DisplayName="Convert deserialized output to bytearray" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="Assign_114">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:Byte[]">[local_ByteArray]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:Byte[]">[System.Text.Encoding.ASCII.GetBytes(local_OutputJson("Predicted ByteArray").ToString)]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <Assign sap2010:Annotation.AnnotationText="Encodes byte array to base64string" DisplayName="Encode bytearray to base64string" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="Assign_115">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[local_Base64Str]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[System.Text.Encoding.UTF8.GetString(local_ByteArray)]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <Assign sap2010:Annotation.AnnotationText="Converts the base64string to byte array" DisplayName="Decode base64string to bytearray" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="Assign_116">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:Byte[]">[local_ConvertedByteArray]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:Byte[]">[Convert.FromBase64String(local_Base64Str)]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <InvokeMethod sap2010:Annotation.AnnotationText="Writing the byte array to image " DisplayName="Writing bytearray to image" sap:VirtualizedContainerService.HintSize="434,167" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="WriteAllBytes" TargetType="si:File">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <InArgument x:TypeArguments="x:String">PredictedOutput.png</InArgument>
                      <InArgument x:TypeArguments="s:Byte[]">[local_ConvertedByteArray]</InArgument>
                    </InvokeMethod>
                  </Sequence>
                </Sequence>
              </ui:CommentOut.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CommentOut>
          </Sequence>
          <FlowStep.Next>
            <FlowDecision x:Name="__ReferenceID28" Condition="[intNoOfObjectsFound = 1]" DisplayName="1 Doc Found?" sap:VirtualizedContainerService.HintSize="78,87" sap2010:WorkflowViewState.IdRef="FlowDecision_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <av:Point x:Key="ShapeLocation">791,546.5</av:Point>
                  <av:Size x:Key="ShapeSize">78,87</av:Size>
                  <av:PointCollection x:Key="TrueConnector">791,590 670,590 670,706</av:PointCollection>
                  <av:PointCollection x:Key="FalseConnector">869,590 1030,590 1030,704</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <FlowDecision.True>
                <FlowStep x:Name="__ReferenceID3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">570,706</av:Point>
                      <av:Size x:Key="ShapeSize">200,68</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">670,774 670,826</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <p1:DigitizeDocument ApplyOcrMigrated="True" ApplyOcrOnPdf="Auto" DegreeOfParallelism="-1" DetectCheckboxes="True" DisplayName="#OCR 1 - Digitize Document" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" ForceApplyOCR="False" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="DigitizeDocument_1">
                    <p1:DigitizeDocument.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, x:String, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))" Argument1="{x:Reference __ReferenceID1}" Argument2="{x:Reference __ReferenceID2}">
                        <p2:UiPathDocumentOCR Output="{x:Null}" Text="{x:Null}" UseLocalServer="{x:Null}" ApiKey="[in_Config(&quot;DUAPIkey&quot;).ToString]" ComputeSkewAngle="False" DisplayName="UiPath Document OCR" Endpoint="https://du-us.uipath.com/ocr" ExtractWords="True" sap:VirtualizedContainerService.HintSize="312,25" sap2010:WorkflowViewState.IdRef="UiPathDocumentOCR_1" Language="auto" Profile="None" Scale="1" Timeout="100000">
                          <p2:UiPathDocumentOCR.Image>
                            <InArgument x:TypeArguments="sd:Image">
                              <DelegateArgumentValue x:TypeArguments="sd:Image" sap2010:WorkflowViewState.IdRef="DelegateArgumentValue`1_1">
                                <DelegateInArgument x:TypeArguments="sd:Image" x:Name="__ReferenceID1" Name="Image" />
                              </DelegateArgumentValue>
                            </InArgument>
                          </p2:UiPathDocumentOCR.Image>
                          <p2:UiPathDocumentOCR.PredictionId>
                            <InArgument x:TypeArguments="x:String">
                              <DelegateArgumentValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="DelegateArgumentValue`1_2">
                                <DelegateInArgument x:TypeArguments="x:String" x:Name="__ReferenceID2" Name="PredictionId" />
                              </DelegateArgumentValue>
                            </InArgument>
                          </p2:UiPathDocumentOCR.PredictionId>
                        </p2:UiPathDocumentOCR>
                      </ActivityFunc>
                    </p1:DigitizeDocument.OCREngine>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </p1:DigitizeDocument>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">570,826</av:Point>
                          <av:Size x:Key="ShapeSize">200,68</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">670,894 670,944</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <p3:ClassifyDocumentScope ClassificationResults="[ClassificationResults]" DisplayName="Classify Document Scope" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="ClassifyDocumentScope_1" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI061a4f78faed4d488d668b82b278d640&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;AEG.Documents.Receipt&quot;,&quot;ClassifierDocumentTypeId&quot;:&quot;\&quot;receipts\&quot;&quot;,&quot;IsDocumentTypeIdMapped&quot;:true}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UI061a4f78faed4d488d668b82b278d640&quot;:&quot;0&quot;},&quot;DocumentTypesByPersistenceId&quot;:{&quot;UI061a4f78faed4d488d668b82b278d640&quot;:[&quot;invoices&quot;,&quot;receipts&quot;]}}">
                        <p3:ClassifyDocumentScope.Classifiers>
                          <p4:MachineLearningClassifier Endpoint="{x:Null}" ApiKey="yzqS8cP09M99D/xsFVsRkMogy+PzUe00u5DhEMVDnje0gfSIUNmSOGu1T1aWSpKyLICBKnbY9YbZxKP1dDmYLg==" Configuration="{}{&quot;Endpoint&quot;:&quot;&quot;,&quot;ApiKey&quot;:&quot;yzqS8cP09M99D/xsFVsRkMogy+PzUe00u5DhEMVDnje0gfSIUNmSOGu1T1aWSpKyLICBKnbY9YbZxKP1dDmYLg==&quot;,&quot;SelectedMLSkill&quot;:&quot;SkillDocClassifierNew&quot;,&quot;AvailableMLSkills&quot;:[&quot;DocumentClassifierSkill&quot;,&quot;MLReceipt&quot;,&quot;NewSkillReceipts&quot;,&quot;Rec&quot;,&quot;SkillDocClassifierNew&quot;]}" DisplayName="Machine Learning Classifier" sap:VirtualizedContainerService.HintSize="234,193" sap2010:WorkflowViewState.IdRef="MachineLearningClassifier_1" PersistenceId="UI061a4f78faed4d488d668b82b278d640" RetryOnFailure="True" SelectedMLSkill="SkillDocClassifierNew" Timeout="100000">
                            <p4:MachineLearningClassifier.AvailableMLSkills>
                              <sc:BindingList x:TypeArguments="x:String" AllowEdit="True" AllowNew="False" AllowRemove="True" RaiseListChangedEvents="True">
                                <x:String>DocumentClassifierSkill</x:String>
                                <x:String>MLReceipt</x:String>
                                <x:String>NewSkillReceipts</x:String>
                                <x:String>Rec</x:String>
                                <x:String>SkillDocClassifierNew</x:String>
                              </sc:BindingList>
                            </p4:MachineLearningClassifier.AvailableMLSkills>
                            <p4:MachineLearningClassifier.ClassifierResult>
                              <OutArgument x:TypeArguments="p5:ClassifierResult">
                                <DelegateArgumentReference x:TypeArguments="p5:ClassifierResult">
                                  <DelegateOutArgument x:TypeArguments="p5:ClassifierResult" Name="ClassifierResult" />
                                </DelegateArgumentReference>
                              </OutArgument>
                            </p4:MachineLearningClassifier.ClassifierResult>
                            <p4:MachineLearningClassifier.DocumentObjectModel>
                              <InArgument x:TypeArguments="p6:Document">
                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                </DelegateArgumentValue>
                              </InArgument>
                            </p4:MachineLearningClassifier.DocumentObjectModel>
                            <p4:MachineLearningClassifier.DocumentPath>
                              <InArgument x:TypeArguments="x:String">
                                <DelegateArgumentValue x:TypeArguments="x:String">
                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                </DelegateArgumentValue>
                              </InArgument>
                            </p4:MachineLearningClassifier.DocumentPath>
                            <p4:MachineLearningClassifier.DocumentText>
                              <InArgument x:TypeArguments="x:String">
                                <DelegateArgumentValue x:TypeArguments="x:String">
                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                </DelegateArgumentValue>
                              </InArgument>
                            </p4:MachineLearningClassifier.DocumentText>
                            <p4:MachineLearningClassifier.DocumentTypes>
                              <InArgument x:TypeArguments="p5:ClassifierDocumentType[]">
                                <DelegateArgumentValue x:TypeArguments="p5:ClassifierDocumentType[]">
                                  <DelegateInArgument x:TypeArguments="p5:ClassifierDocumentType[]" Name="DocumentTypes" />
                                </DelegateArgumentValue>
                              </InArgument>
                            </p4:MachineLearningClassifier.DocumentTypes>
                            <p4:MachineLearningClassifier.PredictionId>
                              <InArgument x:TypeArguments="x:String">
                                <DelegateArgumentValue x:TypeArguments="x:String">
                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                </DelegateArgumentValue>
                              </InArgument>
                            </p4:MachineLearningClassifier.PredictionId>
                          </p4:MachineLearningClassifier>
                        </p3:ClassifyDocumentScope.Classifiers>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </p3:ClassifyDocumentScope>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">570,944</av:Point>
                              <av:Size x:Key="ShapeSize">200,52</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">670,996 670,1026 669,1026 669,1046.5</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:CommentOut sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="CommentOut_31">
                            <ui:CommentOut.Body>
                              <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_203">
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="LogMessage_87" Level="Warn" Message="[strDigitalText]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:LogMessage>
                              </Sequence>
                            </ui:CommentOut.Body>
                          </ui:CommentOut>
                          <FlowStep.Next>
                            <FlowDecision x:Name="__ReferenceID24" Condition="[classificationResults.Any]" DisplayName="Any classification result??" sap:VirtualizedContainerService.HintSize="140,87" sap2010:WorkflowViewState.IdRef="FlowDecision_5">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <av:Point x:Key="ShapeLocation">599,1046.5</av:Point>
                                  <av:Size x:Key="ShapeSize">140,87</av:Size>
                                  <av:PointCollection x:Key="TrueConnector">599,1090 390,1090 390,1184</av:PointCollection>
                                  <av:PointCollection x:Key="FalseConnector">739,1090 970,1090 970,1184</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <FlowDecision.True>
                                <FlowStep x:Name="__ReferenceID23">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">290,1184</av:Point>
                                      <av:Size x:Key="ShapeSize">200,52</av:Size>
                                      <av:PointCollection x:Key="ConnectorLocation">390,1237 390,1304</av:PointCollection>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If Condition="[classificationResults(0).Confidence &lt; in_dblMinimumAgreedClassifierConfidence]" DisplayName="If low Classifier Confidence - Train" sap:VirtualizedContainerService.HintSize="554,1300" sap2010:WorkflowViewState.IdRef="If_50">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="520,1118" sap2010:WorkflowViewState.IdRef="Sequence_120">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="p8:ClassificationResult[]" Name="validatedClassificationResults" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <p3:PresentClassificationStation AutomaticClassificationResults="[classificationResults]" DisplayName="Present Classification Station" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" sap:VirtualizedContainerService.HintSize="478,366" sap2010:WorkflowViewState.IdRef="PresentClassificationStation_1" Taxonomy="[in_Taxonomy]" ValidatedClassificationResults="[validatedClassificationResults]" />
                                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="478,52" sap2010:WorkflowViewState.IdRef="CommentOut_23">
                                          <ui:CommentOut.Body>
                                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="540,179" sap2010:WorkflowViewState.IdRef="Sequence_131">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <p7:TrainClassifiersScope HumanValidatedData="{x:Null}" DisplayName="Train Classifiers Scope" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" sap:VirtualizedContainerService.HintSize="388,68" HumanValidatedClassificationData="[validatedClassificationResults]" sap2010:WorkflowViewState.IdRef="TrainClassifiersScope_2" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI1d70f26cac134ce4b3c62761371d39e9&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;AEG.Documents.Receipt&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UI1d70f26cac134ce4b3c62761371d39e9&quot;:&quot;0&quot;},&quot;DocumentTypesByPersistenceId&quot;:{&quot;UI1d70f26cac134ce4b3c62761371d39e9&quot;:[]}}">
                                                <p7:TrainClassifiersScope.Trainables>
                                                  <p7:IntelligentKeywordClassifierTrainer LearningData="{x:Null}" PredictionId="{x:Null}" DisplayName="Intelligent Keyword Classifier Trainer" sap:VirtualizedContainerService.HintSize="234,115" sap2010:WorkflowViewState.IdRef="IntelligentKeywordClassifierTrainer_3" LearningFilePath="DocumentProcessing\IntelligentKeywordClassifier.json" PersistenceId="UI1d70f26cac134ce4b3c62761371d39e9">
                                                    <p7:IntelligentKeywordClassifierTrainer.DocumentObjectModel>
                                                      <InArgument x:TypeArguments="p6:Document">
                                                        <DelegateArgumentValue x:TypeArguments="p6:Document" sap2010:WorkflowViewState.IdRef="DelegateArgumentValue`1_58">
                                                          <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                        </DelegateArgumentValue>
                                                      </InArgument>
                                                    </p7:IntelligentKeywordClassifierTrainer.DocumentObjectModel>
                                                    <p7:IntelligentKeywordClassifierTrainer.DocumentPath>
                                                      <InArgument x:TypeArguments="x:String">
                                                        <DelegateArgumentValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="DelegateArgumentValue`1_59">
                                                          <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                        </DelegateArgumentValue>
                                                      </InArgument>
                                                    </p7:IntelligentKeywordClassifierTrainer.DocumentPath>
                                                    <p7:IntelligentKeywordClassifierTrainer.DocumentText>
                                                      <InArgument x:TypeArguments="x:String">
                                                        <DelegateArgumentValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="DelegateArgumentValue`1_57">
                                                          <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                        </DelegateArgumentValue>
                                                      </InArgument>
                                                    </p7:IntelligentKeywordClassifierTrainer.DocumentText>
                                                    <p7:IntelligentKeywordClassifierTrainer.HumanValidatedData>
                                                      <InArgument x:TypeArguments="p8:ExtractionResult[]">
                                                        <DelegateArgumentValue x:TypeArguments="p8:ExtractionResult[]" sap2010:WorkflowViewState.IdRef="DelegateArgumentValue`1_60">
                                                          <DelegateInArgument x:TypeArguments="p8:ExtractionResult[]" Name="HumanValidatedData" />
                                                        </DelegateArgumentValue>
                                                      </InArgument>
                                                    </p7:IntelligentKeywordClassifierTrainer.HumanValidatedData>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </p7:IntelligentKeywordClassifierTrainer>
                                                </p7:TrainClassifiersScope.Trainables>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </p7:TrainClassifiersScope>
                                            </Sequence>
                                          </ui:CommentOut.Body>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:CommentOut>
                                        <p7:TrainClassifiersScope HumanValidatedData="{x:Null}" DisplayName="Train Classifiers Scope" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" sap:VirtualizedContainerService.HintSize="478,532" HumanValidatedClassificationData="[validatedClassificationResults]" sap2010:WorkflowViewState.IdRef="TrainClassifiersScope_3" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI6c9caef9573f4dc1a50d0a2a403f744a&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;AEG.Documents.Receipt&quot;,&quot;ClassifierDocumentTypeId&quot;:&quot;\&quot;receipts\&quot;&quot;,&quot;IsDocumentTypeIdMapped&quot;:true}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UI6c9caef9573f4dc1a50d0a2a403f744a&quot;:&quot;0&quot;},&quot;DocumentTypesByPersistenceId&quot;:{&quot;UI6c9caef9573f4dc1a50d0a2a403f744a&quot;:[&quot;1040&quot;,&quot;4506t&quot;,&quot;990&quot;,&quot;acord125&quot;,&quot;acord126&quot;,&quot;acord131&quot;,&quot;acord140&quot;,&quot;acord25&quot;,&quot;bank_statements&quot;,&quot;bills_of_lading&quot;,&quot;certificates_incorporation&quot;,&quot;certificates_origin&quot;,&quot;checks&quot;,&quot;children_product_certificates&quot;,&quot;cms1500&quot;,&quot;eu_declaration_conformity&quot;,&quot;financial_statements&quot;,&quot;fm1003&quot;,&quot;i9&quot;,&quot;id_cards&quot;,&quot;invoices&quot;,&quot;invoices_shipping&quot;,&quot;packing_lists&quot;,&quot;passports&quot;,&quot;payslips&quot;,&quot;purchase_orders&quot;,&quot;receipts&quot;,&quot;remittance_advices&quot;,&quot;utility_bills&quot;,&quot;vehicle_titles&quot;,&quot;w2&quot;,&quot;w9&quot;]}}">
                                          <p7:TrainClassifiersScope.Trainables>
                                            <p4:MachineLearningClassifierTrainer PredictionId="{x:Null}" Configuration="{}{&quot;Endpoint&quot;:&quot;https://du.uipath.com/classify/MLclassification&quot;,&quot;AvailableMLSkills&quot;:[&quot;DocumentClassifierSkill&quot;,&quot;MLReceipt&quot;,&quot;NewSkillReceipts&quot;,&quot;Rec&quot;]}" DisplayName="Machine Learning Classifier Trainer" sap:VirtualizedContainerService.HintSize="234,280" sap2010:WorkflowViewState.IdRef="MachineLearningClassifierTrainer_1" PersistenceId="UI6c9caef9573f4dc1a50d0a2a403f744a" PublicDatasetApiKey="2b56f908-dfb1-449b-8292-2776ba58001a" PublicDatasetEndpoint="https://cloud.uipath.com/testduyyvzmh/DefaultTenant/aifabric_/ai-trainer/v1/signedURL/public?blobName=1a56054f-0570-48b5-be87-83d696f209cc/e2d91014-feba-403e-b3eb-75a9411504c5" RetryOnFailure="True" SelectedDataset="MLDataSetTrainer" SelectedProject="Receipts_Reading" Timeout="100000">
                                              <p4:MachineLearningClassifierTrainer.AvailableDatasets>
                                                <scg:List x:TypeArguments="x:String" Capacity="2">
                                                  <x:String>MLDataSetTrainer</x:String>
                                                  <x:String>RAW - labeled Obj Detection</x:String>
                                                </scg:List>
                                              </p4:MachineLearningClassifierTrainer.AvailableDatasets>
                                              <p4:MachineLearningClassifierTrainer.AvailableProjects>
                                                <scg:List x:TypeArguments="x:String" Capacity="1">
                                                  <x:String>Receipts_Reading</x:String>
                                                </scg:List>
                                              </p4:MachineLearningClassifierTrainer.AvailableProjects>
                                              <p4:MachineLearningClassifierTrainer.DocumentObjectModel>
                                                <InArgument x:TypeArguments="p6:Document">
                                                  <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                    <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                  </DelegateArgumentValue>
                                                </InArgument>
                                              </p4:MachineLearningClassifierTrainer.DocumentObjectModel>
                                              <p4:MachineLearningClassifierTrainer.DocumentPath>
                                                <InArgument x:TypeArguments="x:String">
                                                  <DelegateArgumentValue x:TypeArguments="x:String">
                                                    <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                  </DelegateArgumentValue>
                                                </InArgument>
                                              </p4:MachineLearningClassifierTrainer.DocumentPath>
                                              <p4:MachineLearningClassifierTrainer.DocumentText>
                                                <InArgument x:TypeArguments="x:String">
                                                  <DelegateArgumentValue x:TypeArguments="x:String">
                                                    <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                  </DelegateArgumentValue>
                                                </InArgument>
                                              </p4:MachineLearningClassifierTrainer.DocumentText>
                                              <p4:MachineLearningClassifierTrainer.HumanValidatedData>
                                                <InArgument x:TypeArguments="p8:ExtractionResult[]">
                                                  <DelegateArgumentValue x:TypeArguments="p8:ExtractionResult[]">
                                                    <DelegateInArgument x:TypeArguments="p8:ExtractionResult[]" Name="HumanValidatedData" />
                                                  </DelegateArgumentValue>
                                                </InArgument>
                                              </p4:MachineLearningClassifierTrainer.HumanValidatedData>
                                            </p4:MachineLearningClassifierTrainer>
                                          </p7:TrainClassifiersScope.Trainables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </p7:TrainClassifiersScope>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_121">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                  <FlowStep.Next>
                                    <FlowStep x:Name="__ReferenceID6">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <av:Point x:Key="ShapeLocation">290,1304</av:Point>
                                          <av:Size x:Key="ShapeSize">200,52</av:Size>
                                          <av:PointCollection x:Key="ConnectorLocation">390,1357 390,1399.5</av:PointCollection>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <TryCatch DisplayName="Try getting document type" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <TryCatch.Try>
                                          <Sequence sap:VirtualizedContainerService.HintSize="450,252" sap2010:WorkflowViewState.IdRef="Sequence_1">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Warn" Message="[&quot;Document was identified as: &quot; + ClassificationResults(0).DocumentTypeId + vbNewLine + &quot;Classifier Confidence is: &quot; + (ClassificationResults(0).Confidence * 100).ToString]" />
                                          </Sequence>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="454,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                              </ActivityAction.Argument>
                                              <Sequence sap:VirtualizedContainerService.HintSize="450,253" sap2010:WorkflowViewState.IdRef="Sequence_2">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="p8:ClassificationResult[]" Name="myClassificationResults" />
                                                  <Variable x:TypeArguments="p8:ClassificationResult[]" Name="myValidatedClassificationResults" />
                                                </Sequence.Variables>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_48" Level="Info" Message="[&quot;Document was not identified.&quot; + vbNewLine +&quot;Will move the item to the human queue.&quot;]" />
                                                <Throw Exception="[New BusinessRuleException(&quot;Document was not identified.&quot; + vbNewLine +&quot;Will move the item to the human queue.&quot;)]" sap:VirtualizedContainerService.HintSize="388,90" sap2010:WorkflowViewState.IdRef="Throw_1" />
                                              </Sequence>
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                      <FlowStep.Next>
                                        <FlowStep x:Name="__ReferenceID18">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <av:Point x:Key="ShapeLocation">290,1399.5</av:Point>
                                              <av:Size x:Key="ShapeSize">200,81</av:Size>
                                              <av:PointCollection x:Key="ConnectorLocation">390,1480.5 390,1546.5</av:PointCollection>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Sequence DisplayName="#ML - Extract Data" sap:VirtualizedContainerService.HintSize="200,81" sap2010:WorkflowViewState.IdRef="Sequence_80">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="sd2:DataSet" Name="dataSetResults" />
                                              <Variable x:TypeArguments="x:Int32" Name="intForEachCounter" />
                                            </Sequence.Variables>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="758,52" sap2010:WorkflowViewState.IdRef="LogMessage_39" Level="Info" Message="[&quot;Started to extract the info's with ML approach.&quot;]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:LogMessage>
                                            <p9:DataExtractionScope DocumentTypeId="{x:Null}" ClassificationResult="[ClassificationResults(0)]" DisplayName="#ML - Data Extraction Scope" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" ExtractionResult="[extractionResults]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="758,515" sap2010:WorkflowViewState.IdRef="DataExtractionScope_3" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI8fe1d47cef114df396b1beb0e6c020e0&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;date\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;name\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;currency\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;items\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;description\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;quantity\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;line-amount\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;total\&quot;&quot;,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:&quot;\&quot;\&quot;&quot;}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI8fe1d47cef114df396b1beb0e6c020e0&quot;:&quot;55&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI8fe1d47cef114df396b1beb0e6c020e0&quot;:[{&quot;FieldId&quot;:&quot;&quot;,&quot;SubOptions&quot;:[{&quot;FieldId&quot;:&quot;name&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;vendor-addr&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;phone&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;date&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;total&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;tax&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;receipt-number&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;currency&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;expense-type&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;items&quot;,&quot;SubOptions&quot;:[{&quot;FieldId&quot;:&quot;description&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;quantity&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;unit-price&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;line-amount&quot;,&quot;SubOptions&quot;:null}]}]}]}}">
                                              <p9:DataExtractionScope.Extractors>
                                                <p4:MachineLearningExtractor SelectedMLSkill="{x:Null}" ApiKey="[in_Config(&quot;DUAPIkey&quot;).ToString]" Configuration="{}{&quot;Endpoint&quot;:&quot;https://receipts.uipath.com/&quot;,&quot;ApiKey&quot;:&quot;vecJ5A+mqcQbBaL/NeLi5IA0bFKACvC0G90ad9EElQAjJcl5Jv3162s7F60hSlRi8qjtbQLcg/JUkKIHGYq+sg==&quot;,&quot;AvailableMLSkills&quot;:[]}" DisplayName="Machine Learning Extractor" Endpoint="https://receipts.uipath.com/" sap:VirtualizedContainerService.HintSize="234,193" sap2010:WorkflowViewState.IdRef="MachineLearningExtractor_2" PersistenceId="UI8fe1d47cef114df396b1beb0e6c020e0" RetryOnFailure="True" Timeout="100000" UseServerSideOCR="False">
                                                  <p4:MachineLearningExtractor.AvailableMLSkills>
                                                    <scg:List x:TypeArguments="x:String" Capacity="2">
                                                      <x:String>MLReceipt</x:String>
                                                      <x:String>Rec</x:String>
                                                    </scg:List>
                                                  </p4:MachineLearningExtractor.AvailableMLSkills>
                                                  <p4:MachineLearningExtractor.DocumentBounds>
                                                    <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                      <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                        <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                      </DelegateArgumentValue>
                                                    </InArgument>
                                                  </p4:MachineLearningExtractor.DocumentBounds>
                                                  <p4:MachineLearningExtractor.DocumentObjectModel>
                                                    <InArgument x:TypeArguments="p6:Document">
                                                      <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                        <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                      </DelegateArgumentValue>
                                                    </InArgument>
                                                  </p4:MachineLearningExtractor.DocumentObjectModel>
                                                  <p4:MachineLearningExtractor.DocumentPath>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <DelegateArgumentValue x:TypeArguments="x:String">
                                                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                      </DelegateArgumentValue>
                                                    </InArgument>
                                                  </p4:MachineLearningExtractor.DocumentPath>
                                                  <p4:MachineLearningExtractor.DocumentText>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <DelegateArgumentValue x:TypeArguments="x:String">
                                                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                      </DelegateArgumentValue>
                                                    </InArgument>
                                                  </p4:MachineLearningExtractor.DocumentText>
                                                  <p4:MachineLearningExtractor.ExtractorDocumentType>
                                                    <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                      <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                        <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                      </DelegateArgumentValue>
                                                    </InArgument>
                                                  </p4:MachineLearningExtractor.ExtractorDocumentType>
                                                  <p4:MachineLearningExtractor.ExtractorResult>
                                                    <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                      <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                        <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                      </DelegateArgumentReference>
                                                    </OutArgument>
                                                  </p4:MachineLearningExtractor.ExtractorResult>
                                                  <p4:MachineLearningExtractor.PredictionId>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <DelegateArgumentValue x:TypeArguments="x:String">
                                                        <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                      </DelegateArgumentValue>
                                                    </InArgument>
                                                  </p4:MachineLearningExtractor.PredictionId>
                                                </p4:MachineLearningExtractor>
                                              </p9:DataExtractionScope.Extractors>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </p9:DataExtractionScope>
                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="758,141" sap2010:WorkflowViewState.IdRef="LogMessage_50" Level="Warn" Message="[&quot;DATE Confidence extractor: &quot; + (CDec(ExtractionResults.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(&quot;Date&quot;)).Select(Function(actual_field) actual_field.Values.Select(Function(val) val.Confidence))(0)(0))*100).ToString]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:LogMessage>
                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="758,141" sap2010:WorkflowViewState.IdRef="LogMessage_51" Level="Warn" Message="[&quot;TOTAL Confidence extractor: &quot; + (CDec(ExtractionResults.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(&quot;Total&quot;)).Select(Function(actual_field) actual_field.Values.Select(Function(val) val.Confidence))(0)(0))*100).ToString]" />
                                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="758,52" sap2010:WorkflowViewState.IdRef="CommentOut_18">
                                              <ui:CommentOut.Body>
                                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,252" sap2010:WorkflowViewState.IdRef="Sequence_126">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_52" Level="Warn" Message="[&quot;SHOP Confidence extractor: &quot; + (CDec(ExtractionResults.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(&quot;Shop&quot;)).Select(Function(actual_field) actual_field.Values.Select(Function(val) val.Confidence))(0)(0))*100).ToString]" />
                                                </Sequence>
                                              </ui:CommentOut.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:CommentOut>
                                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="758,52" sap2010:WorkflowViewState.IdRef="CommentOut_19">
                                              <ui:CommentOut.Body>
                                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,252" sap2010:WorkflowViewState.IdRef="Sequence_127">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_53" Level="Warn" Message="[&quot;CURRENCY Confidence extractor: &quot; + (CDec(ExtractionResults.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(&quot;Currency&quot;)).Select(Function(actual_field) actual_field.Values.Select(Function(val) val.Confidence))(0)(0))*100).ToString]" />
                                                </Sequence>
                                              </ui:CommentOut.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:CommentOut>
                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="758,141" sap2010:WorkflowViewState.IdRef="LogMessage_86" Level="Warn" Message="[&quot;LINE ITEMS Confidence extractor: &quot; + (CDec(ExtractionResults.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(&quot;Items&quot;)).Select(Function(actual_field) actual_field.Values.Select(Function(val) val.Confidence))(0)(0))*100).ToString]" />
                                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="758,52" sap2010:WorkflowViewState.IdRef="CommentOut_17">
                                              <ui:CommentOut.Body>
                                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,179" sap2010:WorkflowViewState.IdRef="Sequence_125">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <p1:PresentValidationStation AutomaticExtractionResults="[extractionResults]" DisplayName="Present Validation Station" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" sap:VirtualizedContainerService.HintSize="388,68" sap2010:WorkflowViewState.IdRef="PresentValidationStation_6" ShowOnlyRelevantPageRange="False" Taxonomy="[in_Taxonomy]" ValidatedExtractionResults="[validatedExtractionResults]">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </p1:PresentValidationStation>
                                                </Sequence>
                                              </ui:CommentOut.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:CommentOut>
                                            <p9:ExportExtractionResults DataSet="[dataSetResults]" DisplayName="Export Extraction Results" ExtractionResult="[extractionResults]" sap:VirtualizedContainerService.HintSize="758,68" sap2010:WorkflowViewState.IdRef="ExportExtractionResults_1" IncludeConfidence="False" IncludeOCRConfidence="False">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </p9:ExportExtractionResults>
                                            <ui:ForEach x:TypeArguments="sd2:DataTable" CurrentIndex="[intForEachCounter]" DisplayName="For Each Table in Results DataSet" sap:VirtualizedContainerService.HintSize="758,2517" sap2010:WorkflowViewState.IdRef="ForEach`1_18" Values="[dataSetResults.Tables]">
                                              <ui:ForEach.Body>
                                                <ActivityAction x:TypeArguments="sd2:DataTable">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="sd2:DataTable" Name="currentItem" />
                                                  </ActivityAction.Argument>
                                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="724,2331" sap2010:WorkflowViewState.IdRef="Sequence_82">
                                                    <Sequence.Variables>
                                                      <Variable x:TypeArguments="x:String" Name="strOutputCheckDT" />
                                                    </Sequence.Variables>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <If Condition="[intForEachCounter = 0]" DisplayName="If - first extracted Table" sap:VirtualizedContainerService.HintSize="682,598" sap2010:WorkflowViewState.IdRef="If_33">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If.Then>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="300,416" sap2010:WorkflowViewState.IdRef="Sequence_93">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <If Condition="[currentItem.Rows(0)(&quot;Date&quot;).ToString.Trim &lt;&gt; &quot;&quot;]" DisplayName="If Valid Date" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="If_35">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <If.Then>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="476,473" sap2010:WorkflowViewState.IdRef="Sequence_95">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <Assign DisplayName="Assign Date" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_50">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:String">[strDate]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:String">[currentItem.Rows(0)("Date").ToString]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_51">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_41" Level="Warn" Message="[&quot;Date was extracted: &quot; + strDate]" />
                                                              </Sequence>
                                                            </If.Then>
                                                            <If.Else>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_96">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_52">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                              </Sequence>
                                                            </If.Else>
                                                          </If>
                                                          <If Condition="[currentItem.Rows(0)(&quot;Total&quot;).ToString.Trim &lt;&gt; &quot;&quot;]" DisplayName="If Valid Amount" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="If_36">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <If.Then>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="476,473" sap2010:WorkflowViewState.IdRef="Sequence_97">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <Assign DisplayName="Assign Total Amount" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_53">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:String">[strTotalAmount]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:String">[currentItem.Rows(0)("Total").ToString]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign DisplayName="Assign Total Amount Bool" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_54">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Boolean">[boolTotalAmountExtracted]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_42" Level="Warn" Message="[&quot;Amount was extracted: &quot; + strTotalAmount]" />
                                                              </Sequence>
                                                            </If.Then>
                                                            <If.Else>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_98">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_56">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Boolean">[boolTotalAmountExtracted]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                              </Sequence>
                                                            </If.Else>
                                                          </If>
                                                          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="CommentOut_10">
                                                            <ui:CommentOut.Body>
                                                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,293" sap2010:WorkflowViewState.IdRef="Sequence_116">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <If Condition="[currentItem.Rows(0)(&quot;Currency&quot;).ToString.Trim &lt;&gt; &quot;&quot;]" DisplayName="If Valid Currency" sap:VirtualizedContainerService.HintSize="388,182" sap2010:WorkflowViewState.IdRef="If_37">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <If.Then>
                                                                    <Sequence sap:VirtualizedContainerService.HintSize="400,407" sap2010:WorkflowViewState.IdRef="Sequence_99">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <Assign DisplayName="Assign Currency" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_57">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[strCurrency]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[currentItem.Rows(0)("Currency").ToString]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Assign Currency Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_58">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:Boolean">[boolCurrencyExtracted]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,94" sap2010:WorkflowViewState.IdRef="LogMessage_43" Level="Warn" Message="[&quot;Currency was extracted: &quot; + strCurrency]" />
                                                                    </Sequence>
                                                                  </If.Then>
                                                                  <If.Else>
                                                                    <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_100">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_60">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:Boolean">[boolCurrencyExtracted]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                    </Sequence>
                                                                  </If.Else>
                                                                </If>
                                                              </Sequence>
                                                            </ui:CommentOut.Body>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:CommentOut>
                                                          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="CommentOut_11">
                                                            <ui:CommentOut.Body>
                                                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="572,766" sap2010:WorkflowViewState.IdRef="Sequence_117">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <If Condition="[currentItem.Rows(0)(&quot;Shop&quot;).ToString.Trim &lt;&gt; &quot;&quot;]" DisplayName="If Valid Shop" sap:VirtualizedContainerService.HintSize="510,655" sap2010:WorkflowViewState.IdRef="If_46">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <If.Then>
                                                                    <Sequence sap:VirtualizedContainerService.HintSize="476,473" sap2010:WorkflowViewState.IdRef="Sequence_101">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <Assign DisplayName="Assign Shop" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_61">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[strShop]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[currentItem.Rows(0)("Shop").ToString]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Assign ShopBool" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_62">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:Boolean">[boolShopExtracted]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_44" Level="Warn" Message="[&quot;Shop was extracted: &quot; + strShop]" />
                                                                    </Sequence>
                                                                  </If.Then>
                                                                  <If.Else>
                                                                    <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_102">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <Assign DisplayName="Assign ShopBool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_64">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:Boolean">[boolShopExtracted]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                    </Sequence>
                                                                  </If.Else>
                                                                </If>
                                                              </Sequence>
                                                            </ui:CommentOut.Body>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:CommentOut>
                                                        </Sequence>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="400,104" sap2010:WorkflowViewState.IdRef="Sequence_94">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                    <If Condition="[intForEachCounter = 2]" DisplayName="If - third extracted Table" sap:VirtualizedContainerService.HintSize="682,1605" sap2010:WorkflowViewState.IdRef="If_57">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If.Then>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="648,1423" sap2010:WorkflowViewState.IdRef="Sequence_107">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[currentItem]" DisplayName="For Each Row in Data Results Table" sap:VirtualizedContainerService.HintSize="606,762" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                                                            <ui:ForEachRow.Body>
                                                              <ActivityAction x:TypeArguments="sd2:DataRow">
                                                                <ActivityAction.Argument>
                                                                  <DelegateInArgument x:TypeArguments="sd2:DataRow" Name="CurrentRow" />
                                                                </ActivityAction.Argument>
                                                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="572,647" sap2010:WorkflowViewState.IdRef="Sequence_109">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <If Condition="[CurrentRow(&quot;Item&quot;).ToString.Trim &lt;&gt; &quot;&quot;]" DisplayName="If Valid Item" sap:VirtualizedContainerService.HintSize="510,52" sap2010:WorkflowViewState.IdRef="If_40">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <If.Then>
                                                                      <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_103">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                        <Assign DisplayName="Assign Item" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_65">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="x:String">[strItems]</OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="x:String">[strItems + "Item: " + currentRow("Item").ToString + " , "]</InArgument>
                                                                          </Assign.Value>
                                                                        </Assign>
                                                                      </Sequence>
                                                                    </If.Then>
                                                                    <If.Else>
                                                                      <Sequence sap:VirtualizedContainerService.HintSize="400,104" sap2010:WorkflowViewState.IdRef="Sequence_104">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                      </Sequence>
                                                                    </If.Else>
                                                                  </If>
                                                                  <If Condition="[CurrentRow(&quot;Quantity&quot;).ToString.Trim &lt;&gt; &quot;&quot;]" DisplayName="If Valid Quantity" sap:VirtualizedContainerService.HintSize="510,52" sap2010:WorkflowViewState.IdRef="If_44">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <If.Then>
                                                                      <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_110">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                        <Assign DisplayName="Assign Quantity" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_71">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="x:String">[strItems]</OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="x:String">[strItems + "Quantity: " + currentRow("Quantity").ToString + vbNewLine]</InArgument>
                                                                          </Assign.Value>
                                                                        </Assign>
                                                                      </Sequence>
                                                                    </If.Then>
                                                                    <If.Else>
                                                                      <Sequence sap:VirtualizedContainerService.HintSize="400,104" sap2010:WorkflowViewState.IdRef="Sequence_111">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                      </Sequence>
                                                                    </If.Else>
                                                                  </If>
                                                                  <If Condition="[CurrentRow(&quot;Total&quot;).ToString.Trim &lt;&gt; &quot;&quot;]" DisplayName="If Valid Line Total" sap:VirtualizedContainerService.HintSize="510,352" sap2010:WorkflowViewState.IdRef="If_58">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <If.Then>
                                                                      <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_145">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                        <Assign DisplayName="Assign Quantity" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_83">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="x:String">[strItems]</OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="x:String">[strItems + "Total: " + currentRow("Total").ToString + vbNewLine]</InArgument>
                                                                          </Assign.Value>
                                                                        </Assign>
                                                                      </Sequence>
                                                                    </If.Then>
                                                                    <If.Else>
                                                                      <Sequence sap:VirtualizedContainerService.HintSize="400,104" sap2010:WorkflowViewState.IdRef="Sequence_146">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                      </Sequence>
                                                                    </If.Else>
                                                                  </If>
                                                                </Sequence>
                                                              </ActivityAction>
                                                            </ui:ForEachRow.Body>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:ForEachRow>
                                                          <If Condition="[strItems.Trim &lt;&gt; &quot;&quot;]" DisplayName="If Items were extracted" sap:VirtualizedContainerService.HintSize="606,533" sap2010:WorkflowViewState.IdRef="If_45">
                                                            <If.Then>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="476,351" sap2010:WorkflowViewState.IdRef="Sequence_112">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <Assign DisplayName="Assign Items Bool" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_72">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Boolean">[boolItemsExtracted]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_47" Level="Warn" Message="[&quot;Items were extracted: &quot; + strItems]" />
                                                              </Sequence>
                                                            </If.Then>
                                                            <If.Else>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_113">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <Assign DisplayName="Assign Items Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_73">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Boolean">[boolItemsExtracted]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                              </Sequence>
                                                            </If.Else>
                                                          </If>
                                                        </Sequence>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_108">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                  </Sequence>
                                                </ActivityAction>
                                              </ui:ForEach.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ForEach>
                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="758,141" sap2010:WorkflowViewState.IdRef="LogMessage_40" Level="Warn" Message="[&quot;ML approach done. Please find below the current extraction status: &quot; + vbNewLine +&#xA;&quot;Date extracted: &quot; + boolDateExtracted.ToString + vbNewLine +&#xA;&quot;Currency extracted: &quot; + boolCurrencyExtracted.ToString +vbNewLine +&#xA;&quot;Shop extracted: &quot; + boolShopExtracted.ToString + vbNewLine +&#xA;&quot;Items extracted: &quot; + boolItemsExtracted.ToString + vbNewLine +&#xA;&quot;Total amount extracted: &quot; + boolTotalAmountExtracted.ToString]" />
                                          </Sequence>
                                          <FlowStep.Next>
                                            <FlowDecision x:Name="__ReferenceID16" Condition="[boolDateExtracted = False Or&#xA;boolTotalAmountExtracted = False Or&#xA;boolItemsExtracted = False]" DisplayName="Missing info'?" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_4">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <av:Point x:Key="ShapeLocation">350.5,1546.5</av:Point>
                                                  <av:Size x:Key="ShapeSize">79,87</av:Size>
                                                  <av:PointCollection x:Key="TrueConnector">350.5,1590 230,1590 230,1699.5</av:PointCollection>
                                                  <av:PointCollection x:Key="FalseConnector">429.5,1590 680,1590 680,1704</av:PointCollection>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <FlowDecision.True>
                                                <FlowStep x:Name="__ReferenceID7">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <av:Point x:Key="ShapeLocation">120,1699.5</av:Point>
                                                      <av:Size x:Key="ShapeSize">220,81</av:Size>
                                                      <av:PointCollection x:Key="ConnectorLocation">230,1780.5 230,1846.5</av:PointCollection>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Sequence DisplayName="#OCR 1 - Regex Digitally Extraction" sap:VirtualizedContainerService.HintSize="220,81" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="922,143" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Started to extract the info's with OCR #1 digital approach.&quot;]" />
                                                    <If Condition="[boolDateExtracted = False]" DisplayName="If Date wasn't extracted" sap:VirtualizedContainerService.HintSize="922,53" sap2010:WorkflowViewState.IdRef="If_31">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If.Then>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="530,936" sap2010:WorkflowViewState.IdRef="Sequence_89">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <TryCatch DisplayName="Try - Get Date" sap:VirtualizedContainerService.HintSize="488,848" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <TryCatch.Try>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="450,615" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="388,188" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[in_Config(&quot;DateRegexCases&quot;).ToString.Split(&quot;X&quot;c)]">
                                                                  <ui:ForEach.Body>
                                                                    <ActivityAction x:TypeArguments="x:String">
                                                                      <ActivityAction.Argument>
                                                                        <DelegateInArgument x:TypeArguments="x:String" Name="currentText" />
                                                                      </ActivityAction.Argument>
                                                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,270" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                        <If Condition="[currentText.ToString &lt;&gt; &quot;&quot;]" DisplayName="If valid Regex Case" sap:VirtualizedContainerService.HintSize="334,182" sap2010:WorkflowViewState.IdRef="If_5">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                          <If.Then>
                                                                            <Sequence sap:VirtualizedContainerService.HintSize="1451,1521" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                </scg:Dictionary>
                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                              <Assign DisplayName="Assign - Get Date" sap:VirtualizedContainerService.HintSize="1409,82" sap2010:WorkflowViewState.IdRef="Assign_14">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:String">[strDate]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strDigitalText,currentText.ToString).Value]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <If Condition="[strDate.Trim &lt;&gt; &quot;&quot;]" DisplayName="If Date was identified" sap:VirtualizedContainerService.HintSize="1409,1311" sap2010:WorkflowViewState.IdRef="If_6">
                                                                                <sap:WorkflowViewStateService.ViewState>
                                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                  </scg:Dictionary>
                                                                                </sap:WorkflowViewStateService.ViewState>
                                                                                <If.Then>
                                                                                  <Sequence sap:VirtualizedContainerService.HintSize="552,1129" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                      </scg:Dictionary>
                                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                                    <Switch x:TypeArguments="x:String" DisplayName="Switch - Regex Case for Date" Expression="[currentText.ToString]" sap:VirtualizedContainerService.HintSize="510,52" sap2010:WorkflowViewState.IdRef="Switch`1_1">
                                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                        </scg:Dictionary>
                                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(\d{1,2}(\/|-| )\d{1,2}(\/|-)\d{2,4})" DisplayName="Data Extraction Scope - Date" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_8" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Date&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;(\\d{1,2}(\\/|-| )\\d{1,2}(\\/|-)\\d{2,4})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_3" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(\d{1,2}(\/|-)\d{1,2}(\/|-)\d{2,4})" DisplayName="Data Extraction Scope - Date" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,68" sap2010:WorkflowViewState.IdRef="DataExtractionScope_9" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Date&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;(\\d{1,2}(\\/|-)\\d{1,2}(\\/|-)\\d{2,4})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_5" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(\d{4}(\/|-)\d{1,2}(\/|-|.)\d{1,2})" DisplayName="Data Extraction Scope - Date" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_10" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Date&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;(\\d{4}(\\/|-)\\d{1,2}(\\/|-|.)\\d{1,2})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_6" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(.)(((1[0-2]|0?[1-9])\/(3[01]|[12][0-9]|0?[1-9])\/(?:[0-9]{2})?[0-9]{2})|((Jan(uary)?|Feb(ruary)?|Mar(ch)?|Apr(il)?|May|Jun(e)?|Jul(y)?|Aug(ust)?|Sep(tember)?|Oct(ober)?|Nov(ember)?|Dec(ember)?)\s+\d{1,2},\s+\d{1,4}))" DisplayName="Data Extraction Scope - Date" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,68" sap2010:WorkflowViewState.IdRef="DataExtractionScope_11" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Date&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;(.)(((1[0-2]|0?[1-9])\\/(3[01]|[12][0-9]|0?[1-9])\\/(?:[0-9]{2})?[0-9]{2})|((Jan(uary)?|Feb(ruary)?|Mar(ch)?|Apr(il)?|May|Jun(e)?|Jul(y)?|Aug(ust)?|Sep(tember)?|Oct(ober)?|Nov(ember)?|Dec(ember)?)\\s+\\d{1,2},\\s+\\d{1,4}))&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_7" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(.)(((1[0-2]|0?[1-9])\/(3[01]|[12][0-9]|0?[1-9])\/(?:[0-9]{2})?[0-9]{2})|((Jan(uary)?|Feb(ruary)?|Mar(ch)?|Apr(il)?|May|Jun(e)?|Jul(y)?|Aug(ust)?|Sep(tember)?|Oct(ober)?|Nov(ember)?|Dec(ember)?)\d{1,2}'\s+\d{1,4}))" DisplayName="Data Extraction Scope - Date" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,68" sap2010:WorkflowViewState.IdRef="DataExtractionScope_12" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Date&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;(.)(((1[0-2]|0?[1-9])\\/(3[01]|[12][0-9]|0?[1-9])\\/(?:[0-9]{2})?[0-9]{2})|((Jan(uary)?|Feb(ruary)?|Mar(ch)?|Apr(il)?|May|Jun(e)?|Jul(y)?|Aug(ust)?|Sep(tember)?|Oct(ober)?|Nov(ember)?|Dec(ember)?)\\d{1,2}'\\s+\\d{1,4}))&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_8" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="\w{3} \d{1,2},.\d{1,4}" DisplayName="Data Extraction Scope - Date" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,68" sap2010:WorkflowViewState.IdRef="DataExtractionScope_13" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Date&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;(\\w{3} \\d{1,2},.\\d{1,4})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_9" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(.)(((1[0-2]|0?[1-9])\/(3[01]|[12][0-9]|0?[1-9])\/(?:[0-9]{2})?[0-9]{2})|((Jan(uary)?|Feb(ruary)?|Mar(ch)?|Apr(il)?|May|Jun(e)?|Jul(y)?|Aug(ust)?|Sep(tember)?|Oct(ober)?|Nov(ember)?|Dec(ember)?)\d{1,2}'+\d{1,4}))" DisplayName="Data Extraction Scope - Date" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_14" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Date&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;(.)(((1[0-2]|0?[1-9])\\/(3[01]|[12][0-9]|0?[1-9])\\/(?:[0-9]{2})?[0-9]{2})|((Jan(uary)?|Feb(ruary)?|Mar(ch)?|Apr(il)?|May|Jun(e)?|Jul(y)?|Aug(ust)?|Sep(tember)?|Oct(ober)?|Nov(ember)?|Dec(ember)?)\\d{1,2}'+\\d{1,4}))&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_10" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="[01]?[0-9][-.][0-3]?[0-9][-.]\d{4}" DisplayName="Data Extraction Scope - Date" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_15" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Date&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;([01]?[0-9][-.][0-3]?[0-9][-.]\\d{4})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_11" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="\w{5}' \d{1,2}" DisplayName="Data Extraction Scope - Date" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_16" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Date&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;(\\w{5}' \\d{1,2})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_12" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="\d{1,2}(.)(((1[0-2]|0?[1-9])\/(3[01]|[12][0-9]|0?[1-9])\/(?:[0-9]{2})?[0-9]{2})|((Jan(uary)?|Feb(ruary)?|Mar(ch)?|Apr(il)?|May|Jun(e)?|Jul(y)?|Aug(ust)?|Sep(tember)?|Oct(ober)?|Nov(ember)?|Dec(ember)?)+\d{1,4}))" DisplayName="Data Extraction Scope - Date" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_17" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Date&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;(\\d{1,2}(.)(((1[0-2]|0?[1-9])\\/(3[01]|[12][0-9]|0?[1-9])\\/(?:[0-9]{2})?[0-9]{2})|((Jan(uary)?|Feb(ruary)?|Mar(ch)?|Apr(il)?|May|Jun(e)?|Jul(y)?|Aug(ust)?|Sep(tember)?|Oct(ober)?|Nov(ember)?|Dec(ember)?)+\\d{1,4})))&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_13" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="[A-Za-z0-9]+'[0-9]+" DisplayName="Data Extraction Scope - Date" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_18" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Date&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;([A-Za-z0-9]+'[0-9]+)&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_14" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;!\S)\d{1,2}/\d{1,2}/\d{4}(?!\S)(?!.*\d{1,2}/\d{1,2}/\d{4})" DisplayName="Data Extraction Scope - Date" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_131" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Date&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;!\\S)\\d{1,2}/\\d{1,2}/\\d{4}(?!\\S)(?!.*\\d{1,2}/\\d{1,2}/\\d{4}))&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_127" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="\b\d{2}/\d{2}/\d{2}\b(?!\d{2}/\d{2}/\d{2})" DisplayName="Data Extraction Scope - Date" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_152" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Date&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;(\\b\\d{2}/\\d{2}/\\d{2}\\b(?!\\d{2}/\\d{2}/\\d{2}))&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_148" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                    </Switch>
                                                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="LogMessage_59" Level="[UiPath.Core.Activities.LogLevel.Trace]" Message="[&quot;OCR #1 - DATE Confidence extractor: &quot; + (CDec(extractionResultsOCR1.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(&quot;Date&quot;)).Select(Function(actual_field) actual_field.Values.Select(Function(val) val.Confidence))(0)(0))*100).ToString]">
                                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                        </scg:Dictionary>
                                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                                    </ui:LogMessage>
                                                                                    <ui:LogMessage DisplayName="TBR" sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="LogMessage_64" Level="[UiPath.Core.Activities.LogLevel.Trace]" Message="[currentText]" />
                                                                                    <If Condition="[CDec(extractionResultsOCR1.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(&quot;Date&quot;)).Select(Function(actual_field) actual_field.Values.Select(Function(val) val.Confidence))(0)(0)) &lt; in_dblMinimumAgreedOCRClassifierConfidence]" DisplayName="If threshold not met" sap:VirtualizedContainerService.HintSize="510,587" sap2010:WorkflowViewState.IdRef="If_52">
                                                                                      <If.Then>
                                                                                        <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_135">
                                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            </scg:Dictionary>
                                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                                          <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_75">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                        </Sequence>
                                                                                      </If.Then>
                                                                                      <If.Else>
                                                                                        <Sequence sap:VirtualizedContainerService.HintSize="476,235" sap2010:WorkflowViewState.IdRef="Sequence_136">
                                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            </scg:Dictionary>
                                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                                          <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_76">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <ui:Break sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="Break_5" />
                                                                                        </Sequence>
                                                                                      </If.Else>
                                                                                    </If>
                                                                                  </Sequence>
                                                                                </If.Then>
                                                                                <If.Else>
                                                                                  <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                      </scg:Dictionary>
                                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                                    <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_19">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                  </Sequence>
                                                                                </If.Else>
                                                                              </If>
                                                                            </Sequence>
                                                                          </If.Then>
                                                                          <If.Else>
                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                </scg:Dictionary>
                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                            </Sequence>
                                                                          </If.Else>
                                                                        </If>
                                                                      </Sequence>
                                                                    </ActivityAction>
                                                                  </ui:ForEach.Body>
                                                                </ui:ForEach>
                                                                <If Condition="[boolDateExtracted]" DisplayName="If date was extracted" sap:VirtualizedContainerService.HintSize="388,183" sap2010:WorkflowViewState.IdRef="If_7">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <If.Then>
                                                                    <Sequence sap:VirtualizedContainerService.HintSize="376,410" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Warn" Message="[&quot;DATE was extracted: &quot; + strDate]" />
                                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_82" Level="Warn" Message="[&quot;OCR #1 - DATE Confidence extractor: &quot; + (CDec(extractionResultsOCR1.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(&quot;Date&quot;)).Select(Function(actual_field) actual_field.Values.Select(Function(val) val.Confidence))(0)(0))*100).ToString]">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                      </ui:LogMessage>
                                                                    </Sequence>
                                                                  </If.Then>
                                                                  <If.Else>
                                                                    <Sequence sap:VirtualizedContainerService.HintSize="476,350" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_49">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Warn" Message="[&quot;Date couldn't be digitally extracted.&quot;]" />
                                                                    </Sequence>
                                                                  </If.Else>
                                                                </If>
                                                                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="388,53" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                                                                  <ui:CommentOut.Body>
                                                                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="558,747" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <Sequence DisplayName="OLD" sap:VirtualizedContainerService.HintSize="496,640" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                        <Assign DisplayName="Assign - Get Date" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_8">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="x:String">[strDate]</OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strDigitalText,"(\d{1,2}(\/|-)\d{1,2}(\/|-)\d{2,4})").Value]</InArgument>
                                                                          </Assign.Value>
                                                                        </Assign>
                                                                        <If Condition="[strDate.Trim = &quot;&quot;]" DisplayName="If date wasn't extracted" sap:VirtualizedContainerService.HintSize="434,183" sap2010:WorkflowViewState.IdRef="If_3">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                          <If.Then>
                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                </scg:Dictionary>
                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                              <Assign DisplayName="Assign - Get Date" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_9">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:String">[strDate]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strDigitalText,"(\d{4}(\/|-)\d{1,2}(\/|-|.)\d{1,2})").Value]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                            </Sequence>
                                                                          </If.Then>
                                                                          <If.Else>
                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                </scg:Dictionary>
                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                              <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_10">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                            </Sequence>
                                                                          </If.Else>
                                                                        </If>
                                                                        <If Condition="[strDate.Trim = &quot;&quot; and boolDateExtracted = False]" DisplayName="If date wasn't extracted" sap:VirtualizedContainerService.HintSize="434,183" sap2010:WorkflowViewState.IdRef="If_4">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                          <If.Then>
                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,304" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                </scg:Dictionary>
                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Warn" Message="[&quot;Wasn't able to digitally extract the date.&quot;]" />
                                                                              <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_11">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                            </Sequence>
                                                                          </If.Then>
                                                                          <If.Else>
                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,304" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                </scg:Dictionary>
                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                              <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_12">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Extracted date is: &quot; + strDate]" />
                                                                            </Sequence>
                                                                          </If.Else>
                                                                        </If>
                                                                      </Sequence>
                                                                    </Sequence>
                                                                  </ui:CommentOut.Body>
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </ui:CommentOut>
                                                              </Sequence>
                                                            </TryCatch.Try>
                                                            <TryCatch.Catches>
                                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="454,22" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ActivityAction x:TypeArguments="s:Exception">
                                                                  <ActivityAction.Argument>
                                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                  </ActivityAction.Argument>
                                                                  <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_13">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                </ActivityAction>
                                                              </Catch>
                                                            </TryCatch.Catches>
                                                          </TryCatch>
                                                        </Sequence>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="400,104" sap2010:WorkflowViewState.IdRef="Sequence_90">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                    <If Condition="[boolTotalAmountExtracted = False]" DisplayName="If Total Amount wasn't extracted" sap:VirtualizedContainerService.HintSize="922,53" sap2010:WorkflowViewState.IdRef="If_32">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If.Then>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="530,936" sap2010:WorkflowViewState.IdRef="Sequence_91">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <TryCatch DisplayName="Try - Get Total" sap:VirtualizedContainerService.HintSize="488,848" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <TryCatch.Try>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="450,615" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="388,188" sap2010:WorkflowViewState.IdRef="ForEach`1_10" Values="[in_Config(&quot;TotalAmountRegexCases&quot;).ToString.Split(&quot;X&quot;c)]">
                                                                  <ui:ForEach.Body>
                                                                    <ActivityAction x:TypeArguments="x:String">
                                                                      <ActivityAction.Argument>
                                                                        <DelegateInArgument x:TypeArguments="x:String" Name="currentItem" />
                                                                      </ActivityAction.Argument>
                                                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,270" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                        <If Condition="[currentItem.ToString &lt;&gt; &quot;&quot;]" DisplayName="If valid Regex Case" sap:VirtualizedContainerService.HintSize="334,182" sap2010:WorkflowViewState.IdRef="If_9">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                          <If.Then>
                                                                            <Sequence sap:VirtualizedContainerService.HintSize="628,1521" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                </scg:Dictionary>
                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                              <Assign DisplayName="Assign - Get Amount" sap:VirtualizedContainerService.HintSize="586,82" sap2010:WorkflowViewState.IdRef="Assign_20">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:String">[strTotalAmount]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strDigitalText,currentItem.ToString, RegexOptions.RightToLeft).Value]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <If Condition="[strTotalAmount.Trim &lt;&gt; &quot;&quot; and strTotalAmount.Trim.Count &lt; 10]" DisplayName="If Amount was identified" sap:VirtualizedContainerService.HintSize="586,1311" sap2010:WorkflowViewState.IdRef="If_8">
                                                                                <sap:WorkflowViewStateService.ViewState>
                                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                  </scg:Dictionary>
                                                                                </sap:WorkflowViewStateService.ViewState>
                                                                                <If.Then>
                                                                                  <Sequence sap:VirtualizedContainerService.HintSize="552,1129" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                      </scg:Dictionary>
                                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                                    <Switch x:TypeArguments="x:String" DisplayName="Switch - Regex Case for Amount" Expression="[currentItem.ToString]" sap:VirtualizedContainerService.HintSize="510,52" sap2010:WorkflowViewState.IdRef="Switch`1_2">
                                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                        </scg:Dictionary>
                                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key=" (?&lt;=TOTAŁ DUE)*\$(\s(([+-]?(?=\.\d|\d)(?:\d+)?(?:\.?\d*))(?:[Ee]([+-]?\d+))?\s)+)" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_27" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;(?&lt;=TOTAŁ DUE)*\\$(\\s(([+-]?(?=\\.\\d|\\d)(?:\\d+)?(?:\\.?\\d*))(?:[Ee]([+-]?\\d+))?\\s)+)&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_23" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=TOTAL:\r?\n\s*)\S.*" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_30" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=TOTAL:\\r?\\n\\s*)\\S.*)&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_26" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=TOTAL\r?\n\s*)\S.*" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_31" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=TOTAL\\r?\\n\\s*)\\S.*)&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_27" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=Total\r?\n\s*)\S.*" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_32" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=Total\\r?\\n\\s*)\\S.*)&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_28" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=TOTAL:.*)\d{1,5}\.\d{1,3}" DisplayName="NOU DataExtractionScope" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_70" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI3ab7e5d80f4c42ab88a5171722e06169&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;&quot;,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI3ab7e5d80f4c42ab88a5171722e06169&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI3ab7e5d80f4c42ab88a5171722e06169&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=TOTAL:.*)\\d{1,5}\\.\\d{1,3}?)&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_66" PersistenceId="UI3ab7e5d80f4c42ab88a5171722e06169" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=TOTAŁ.*DUE.*)\d{1,5}\.\d{1,3}" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_34" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=TOTAŁ.*DUE.*)\\d{1,5}\\.\\d{1,3})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_30" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=Amount Due.*)\d{1,5}\.\d{1,3}" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_35" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=Amount Due.*)\\d{1,5}\\.\\d{1,3})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_31" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=lance Due.*)\d{1,5}\.\d{1,3}" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_36" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=lance Due.*)\\d{1,5}\\.\\d{1,3})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_32" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=Amt Due:.*)\d{1,5}\.\d{1,3}" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_37" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=Amt Due:.*)\\d{1,5}\\.\\d{1,3})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_33" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=TOTAL .*)\d{1,5}\.\d{1,3}" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_38" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=TOTAL .*)\\d{1,5}\\.\\d{1,3})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_34" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;= Total.*)\d{1,5}\.\d{1,3}" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_39" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;= Total.*)\\d{1,5}\\.\\d{1,3})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_35" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;= Total )\d{1,5}\.\d{1,3}" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_40" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;= Total )\\d{1,5}\\.\\d{1,3})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_36" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=TOTAL.[^\d]+)[\d\,\.]+|(?&lt;=TOTAL:.[^\d]+)[\d\,\.]+|(?&lt;=Total..[^\d]+)[\d\,\.]+|(?&lt;=Grand Total.[^\d]+)[\d\,\.]+|(?&lt;=Balance Due[^\d]+)[\d\,\.]+" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_41" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=TOTAL.[^\\d]+)[\\d\\,\\.]+|(?&lt;=TOTAL:.[^\\d]+)[\\d\\,\\.]+|(?&lt;=Total..[^\\d]+)[\\d\\,\\.]+|(?&lt;=Grand Total.[^\\d]+)[\\d\\,\\.]+|(?&lt;=Balance Due[^\\d]+)[\\d\\,\\.]+)&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_37" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=TL.*)\d{1,5}\.\d{1,3}" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_42" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=TL.*)\\d{1,5}\\.\\d{1,3})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_38" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="\d{1,5}[.]\d{1,5}" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_43" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;(\\d{1,5}[.]\\d{1,5})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_39" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=Incl.\s+of\s+GST...)[^0-9]*([\d.]+)" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_97" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=Incl.\\s+of\\s+GST...)[^0-9]*([\\d.]+))&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_93" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=Total\sSales\s\(Inclusive\sof\sGST\)\s:\s*)\d+\.\d+" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_98" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=Total\\sSales\\s\\(Inclusive\\sof\\sGST\\)\\s:\\s*)\\d+\\.\\d+)&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_94" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=TOTAL:.*)\$([\d.]+)" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_99" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=TOTAL:.*)\\$([\\d.]+))&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_95" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=Total: )([\d.]+)" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_100" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=Total: )([\\d.]+))&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_96" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                    </Switch>
                                                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="LogMessage_79" Level="[UiPath.Core.Activities.LogLevel.Trace]" Message="[&quot;OCR #1 - TOTAL Amount Confidence extractor: &quot; + (CDec(extractionResultsOCR1.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(&quot;Total&quot;)).Select(Function(actual_field) actual_field.Values.Select(Function(val) val.Confidence))(0)(0))*100).ToString]">
                                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                        </scg:Dictionary>
                                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                                    </ui:LogMessage>
                                                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="LogMessage_70" Level="[UiPath.Core.Activities.LogLevel.Trace]" Message="[currentItem]" />
                                                                                    <If Condition="[CDec(extractionResultsOCR1.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(&quot;Total&quot;)).Select(Function(actual_field) actual_field.Values.Select(Function(val) val.Confidence))(0)(0)) &lt; in_dblMinimumAgreedOCRClassifierConfidence]" DisplayName="If threshold not meet" sap:VirtualizedContainerService.HintSize="510,587" sap2010:WorkflowViewState.IdRef="If_51">
                                                                                      <If.Then>
                                                                                        <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_133">
                                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            </scg:Dictionary>
                                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                                          <Assign DisplayName="Assign Amount Bool" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_74">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:Boolean">[boolTotalAmountExtracted]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                        </Sequence>
                                                                                      </If.Then>
                                                                                      <If.Else>
                                                                                        <Sequence sap:VirtualizedContainerService.HintSize="476,235" sap2010:WorkflowViewState.IdRef="Sequence_134">
                                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            </scg:Dictionary>
                                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                                          <Assign DisplayName="Assign Amount Bool" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_21">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:Boolean">[boolTotalAmountExtracted]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <ui:Break sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="Break_2" />
                                                                                        </Sequence>
                                                                                      </If.Else>
                                                                                    </If>
                                                                                  </Sequence>
                                                                                </If.Then>
                                                                                <If.Else>
                                                                                  <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                      </scg:Dictionary>
                                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                                    <Assign DisplayName="Assign Amount Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_29">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:Boolean">[boolTotalAmountExtracted]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                  </Sequence>
                                                                                </If.Else>
                                                                              </If>
                                                                            </Sequence>
                                                                          </If.Then>
                                                                          <If.Else>
                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                </scg:Dictionary>
                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                            </Sequence>
                                                                          </If.Else>
                                                                        </If>
                                                                      </Sequence>
                                                                    </ActivityAction>
                                                                  </ui:ForEach.Body>
                                                                </ui:ForEach>
                                                                <If Condition="[boolTotalAmountExtracted and (strTotalAmount.Contains(&quot;.&quot;) OR strTotalAmount.Contains(&quot;,&quot;))]" DisplayName="If amount was extracted" sap:VirtualizedContainerService.HintSize="388,183" sap2010:WorkflowViewState.IdRef="If_10">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <If.Then>
                                                                    <Sequence sap:VirtualizedContainerService.HintSize="376,410" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Warn" Message="[&quot;TOTAL Amount was extracted: &quot; + strTotalAmount]" />
                                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_81" Level="[UiPath.Core.Activities.LogLevel.Warn]" Message="[&quot;OCR #1 - TOTAL Amount Confidence extractor: &quot; + (CDec(extractionResultsOCR1.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(&quot;Total&quot;)).Select(Function(actual_field) actual_field.Values.Select(Function(val) val.Confidence))(0)(0))*100).ToString]">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                      </ui:LogMessage>
                                                                    </Sequence>
                                                                  </If.Then>
                                                                  <If.Else>
                                                                    <Sequence sap:VirtualizedContainerService.HintSize="476,350" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <Assign DisplayName="Assign Amount Bool" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_48">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:Boolean">[boolTotalAmountExtracted]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Warn" Message="[&quot;Amount couldn't be digitally extracted.&quot;]" />
                                                                    </Sequence>
                                                                  </If.Else>
                                                                </If>
                                                                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="388,53" sap2010:WorkflowViewState.IdRef="CommentOut_4">
                                                                  <ui:CommentOut.Body>
                                                                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="558,747" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <Sequence DisplayName="OLD" sap:VirtualizedContainerService.HintSize="496,640" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                        <Assign DisplayName="Assign - Get Date" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_23">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="x:String">[strDate]</OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strDigitalText,"(\d{1,2}(\/|-)\d{1,2}(\/|-)\d{2,4})").Value]</InArgument>
                                                                          </Assign.Value>
                                                                        </Assign>
                                                                        <If Condition="[strDate.Trim = &quot;&quot;]" DisplayName="If date wasn't extracted" sap:VirtualizedContainerService.HintSize="434,183" sap2010:WorkflowViewState.IdRef="If_11">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                          <If.Then>
                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                </scg:Dictionary>
                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                              <Assign DisplayName="Assign - Get Date" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_24">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:String">[strDate]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strDigitalText,"(\d{4}(\/|-)\d{1,2}(\/|-|.)\d{1,2})").Value]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                            </Sequence>
                                                                          </If.Then>
                                                                          <If.Else>
                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                </scg:Dictionary>
                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                              <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_25">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                            </Sequence>
                                                                          </If.Else>
                                                                        </If>
                                                                        <If Condition="[strDate.Trim = &quot;&quot; and boolDateExtracted = False]" DisplayName="If date wasn't extracted" sap:VirtualizedContainerService.HintSize="434,183" sap2010:WorkflowViewState.IdRef="If_12">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                          <If.Then>
                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,306" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                </scg:Dictionary>
                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,94" sap2010:WorkflowViewState.IdRef="LogMessage_20" Level="Warn" Message="[&quot;Wasn't able to digitally extract the date.&quot;]" />
                                                                              <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_26">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                            </Sequence>
                                                                          </If.Then>
                                                                          <If.Else>
                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,306" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                </scg:Dictionary>
                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                              <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_27">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,94" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Info" Message="[&quot;Extracted date is: &quot; + strDate]" />
                                                                            </Sequence>
                                                                          </If.Else>
                                                                        </If>
                                                                      </Sequence>
                                                                    </Sequence>
                                                                  </ui:CommentOut.Body>
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </ui:CommentOut>
                                                              </Sequence>
                                                            </TryCatch.Try>
                                                            <TryCatch.Catches>
                                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="454,22" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ActivityAction x:TypeArguments="s:Exception">
                                                                  <ActivityAction.Argument>
                                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                  </ActivityAction.Argument>
                                                                  <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_28">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                </ActivityAction>
                                                              </Catch>
                                                            </TryCatch.Catches>
                                                          </TryCatch>
                                                        </Sequence>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="400,104" sap2010:WorkflowViewState.IdRef="Sequence_92">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="922,53" sap2010:WorkflowViewState.IdRef="CommentOut_27">
                                                      <ui:CommentOut.Body>
                                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,294" sap2010:WorkflowViewState.IdRef="Sequence_165">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <If Condition="[boolShopExtracted = False]" DisplayName="If Shop wasn't extracted with approach #1" sap:VirtualizedContainerService.HintSize="388,53" sap2010:WorkflowViewState.IdRef="If_28">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <If.Then>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_83">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </Sequence>
                                                            </If.Then>
                                                            <If.Else>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="400,104" sap2010:WorkflowViewState.IdRef="Sequence_84">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </Sequence>
                                                            </If.Else>
                                                          </If>
                                                        </Sequence>
                                                      </ui:CommentOut.Body>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:CommentOut>
                                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="922,53" sap2010:WorkflowViewState.IdRef="CommentOut_28">
                                                      <ui:CommentOut.Body>
                                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,294" sap2010:WorkflowViewState.IdRef="Sequence_166">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <If Condition="[boolCurrencyExtracted = False]" DisplayName="If Currency wasn't extracted" sap:VirtualizedContainerService.HintSize="388,53" sap2010:WorkflowViewState.IdRef="If_29">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <If.Then>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_85">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </Sequence>
                                                            </If.Then>
                                                            <If.Else>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="400,104" sap2010:WorkflowViewState.IdRef="Sequence_86">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </Sequence>
                                                            </If.Else>
                                                          </If>
                                                        </Sequence>
                                                      </ui:CommentOut.Body>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:CommentOut>
                                                    <If Condition="[boolItemsExtracted = False]" DisplayName="If Items were not extracted" sap:VirtualizedContainerService.HintSize="922,3446" sap2010:WorkflowViewState.IdRef="If_65">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If.Then>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="888,3263" sap2010:WorkflowViewState.IdRef="Sequence_183">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <TryCatch DisplayName="Try - Get Line Items" sap:VirtualizedContainerService.HintSize="846,3175" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <TryCatch.Try>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="808,2943" sap2010:WorkflowViewState.IdRef="Sequence_182">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="746,2108" sap2010:WorkflowViewState.IdRef="ForEach`1_20" Values="[in_Config(&quot;LineItemsRegexCases&quot;).ToString.Split(&quot;X&quot;c)]">
                                                                  <ui:ForEach.Body>
                                                                    <ActivityAction x:TypeArguments="x:String">
                                                                      <ActivityAction.Argument>
                                                                        <DelegateInArgument x:TypeArguments="x:String" Name="currentText" />
                                                                      </ActivityAction.Argument>
                                                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="712,1920" sap2010:WorkflowViewState.IdRef="Sequence_173">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                        <If Condition="[currentText.ToString &lt;&gt; &quot;&quot;]" DisplayName="If valid Regex Case" sap:VirtualizedContainerService.HintSize="670,1832" sap2010:WorkflowViewState.IdRef="If_66">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                          <If.Then>
                                                                            <Sequence sap:VirtualizedContainerService.HintSize="636,1649" sap2010:WorkflowViewState.IdRef="Sequence_171">
                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                </scg:Dictionary>
                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                              <Assign DisplayName="Assign - Get Items" sap:VirtualizedContainerService.HintSize="594,83" sap2010:WorkflowViewState.IdRef="Assign_94">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:String">[strItems]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strDigitalText,currentText.ToString).Value]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <If Condition="[strItems.Trim &lt;&gt; &quot;&quot;]" DisplayName="If Line Items were identified" sap:VirtualizedContainerService.HintSize="594,1438" sap2010:WorkflowViewState.IdRef="If_67">
                                                                                <sap:WorkflowViewStateService.ViewState>
                                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                  </scg:Dictionary>
                                                                                </sap:WorkflowViewStateService.ViewState>
                                                                                <If.Then>
                                                                                  <Sequence sap:VirtualizedContainerService.HintSize="560,1255" sap2010:WorkflowViewState.IdRef="Sequence_169">
                                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                      </scg:Dictionary>
                                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                                    <Switch x:TypeArguments="x:String" DisplayName="Switch - Regex Case for Line Items" Expression="[currentText.ToString]" sap:VirtualizedContainerService.HintSize="518,591" sap2010:WorkflowViewState.IdRef="Switch`1_13">
                                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                        </scg:Dictionary>
                                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?m)^\d+\s+.+?\s+(\d+\.\d{2}|(?=\s*$))" DisplayName="Data Extraction Scope - Line Items" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,404" sap2010:WorkflowViewState.IdRef="DataExtractionScope_198" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;RowConfiguration&quot;&quot;:{&quot;&quot;Expression&quot;&quot;:null,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null},&quot;&quot;ColumnConfigurations&quot;&quot;:[],&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Items&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?m)^\\d+\\s+.+?\\s+(\\d+\\.\\d{2}|(?=\\s*$)))&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_194" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                </DelegateArgumentReference>
                                                                                              </OutArgument>
                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                </DelegateArgumentValue>
                                                                                              </InArgument>
                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                            <sap:WorkflowViewStateService.ViewState>
                                                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                              </scg:Dictionary>
                                                                                            </sap:WorkflowViewStateService.ViewState>
                                                                                          </p9:RegexBasedExtractor>
                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </p9:DataExtractionScope>
                                                                                    </Switch>
                                                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="518,143" sap2010:WorkflowViewState.IdRef="LogMessage_95" Level="[UiPath.Core.Activities.LogLevel.Trace]" Message="[&quot;OCR #1 - Line Items Confidence extractor: &quot; + (CDec(extractionResultsOCR1.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(&quot;Items&quot;)).Select(Function(actual_field) actual_field.Values.Select(Function(val) val.Confidence))(0)(0))*100).ToString]">
                                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                        </scg:Dictionary>
                                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                                    </ui:LogMessage>
                                                                                    <If Condition="[CDec(extractionResultsOCR1.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(&quot;Items&quot;)).Select(Function(actual_field) actual_field.Values.Select(Function(val) val.Confidence))(0)(0)) &lt; in_dblMinimumAgreedOCRClassifierConfidence]" DisplayName="If threshold not met" sap:VirtualizedContainerService.HintSize="518,353" sap2010:WorkflowViewState.IdRef="If_69">
                                                                                      <If.Then>
                                                                                        <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_167">
                                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            </scg:Dictionary>
                                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                                          <Assign DisplayName="Assign Items Bool" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_95">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:Boolean">[boolItemsExtracted]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                        </Sequence>
                                                                                      </If.Then>
                                                                                      <If.Else>
                                                                                        <Sequence sap:VirtualizedContainerService.HintSize="476,235" sap2010:WorkflowViewState.IdRef="Sequence_168">
                                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            </scg:Dictionary>
                                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                                          <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_96">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:Boolean">[boolItemsExtracted]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <ui:Break sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="Break_9" />
                                                                                        </Sequence>
                                                                                      </If.Else>
                                                                                    </If>
                                                                                  </Sequence>
                                                                                </If.Then>
                                                                                <If.Else>
                                                                                  <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_170">
                                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                      </scg:Dictionary>
                                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                                    <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_97">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                  </Sequence>
                                                                                </If.Else>
                                                                              </If>
                                                                            </Sequence>
                                                                          </If.Then>
                                                                          <If.Else>
                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_172">
                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                </scg:Dictionary>
                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                            </Sequence>
                                                                          </If.Else>
                                                                        </If>
                                                                      </Sequence>
                                                                    </ActivityAction>
                                                                  </ui:ForEach.Body>
                                                                </ui:ForEach>
                                                                <If Condition="[boolItemsExtracted]" DisplayName="If Line Items were extracted" sap:VirtualizedContainerService.HintSize="738,592" sap2010:WorkflowViewState.IdRef="If_68">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <If.Then>
                                                                    <Sequence sap:VirtualizedContainerService.HintSize="376,410" sap2010:WorkflowViewState.IdRef="Sequence_174">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_96" Level="Warn" Message="[&quot;Line items were extracted: &quot; + strItems]" />
                                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_97" Level="Warn" Message="[&quot;OCR #1 - Line Items Confidence extractor: &quot; + (CDec(extractionResultsOCR1.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(&quot;Items&quot;)).Select(Function(actual_field) actual_field.Values.Select(Function(val) val.Confidence))(0)(0))*100).ToString]">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                      </ui:LogMessage>
                                                                    </Sequence>
                                                                  </If.Then>
                                                                  <If.Else>
                                                                    <Sequence sap:VirtualizedContainerService.HintSize="400,203" sap2010:WorkflowViewState.IdRef="Sequence_175">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_98" Level="Warn" Message="[&quot;Date couldn't be digitally extracted.&quot;]" />
                                                                    </Sequence>
                                                                  </If.Else>
                                                                </If>
                                                                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="738,52" sap2010:WorkflowViewState.IdRef="CommentOut_29">
                                                                  <ui:CommentOut.Body>
                                                                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="558,746" sap2010:WorkflowViewState.IdRef="Sequence_181">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <Sequence DisplayName="OLD" sap:VirtualizedContainerService.HintSize="496,637" sap2010:WorkflowViewState.IdRef="Sequence_180">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                        <Assign DisplayName="Assign - Get Date" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_98">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="x:String">[strDate]</OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strDigitalText,"(\d{1,2}(\/|-)\d{1,2}(\/|-)\d{2,4})").Value]</InArgument>
                                                                          </Assign.Value>
                                                                        </Assign>
                                                                        <If Condition="[strDate.Trim = &quot;&quot;]" DisplayName="If date wasn't extracted" sap:VirtualizedContainerService.HintSize="434,182" sap2010:WorkflowViewState.IdRef="If_70">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                          <If.Then>
                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_176">
                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                </scg:Dictionary>
                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                              <Assign DisplayName="Assign - Get Date" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_99">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:String">[strDate]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strDigitalText,"(\d{4}(\/|-)\d{1,2}(\/|-|.)\d{1,2})").Value]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                            </Sequence>
                                                                          </If.Then>
                                                                          <If.Else>
                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_177">
                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                </scg:Dictionary>
                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                              <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_100">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                            </Sequence>
                                                                          </If.Else>
                                                                        </If>
                                                                        <If Condition="[strDate.Trim = &quot;&quot; and boolDateExtracted = False]" DisplayName="If date wasn't extracted" sap:VirtualizedContainerService.HintSize="434,182" sap2010:WorkflowViewState.IdRef="If_71">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                          <If.Then>
                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,304" sap2010:WorkflowViewState.IdRef="Sequence_178">
                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                </scg:Dictionary>
                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_99" Level="Warn" Message="[&quot;Wasn't able to digitally extract the date.&quot;]" />
                                                                              <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_101">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                            </Sequence>
                                                                          </If.Then>
                                                                          <If.Else>
                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,304" sap2010:WorkflowViewState.IdRef="Sequence_179">
                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                </scg:Dictionary>
                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                              <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_102">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_100" Level="Info" Message="[&quot;Extracted date is: &quot; + strDate]" />
                                                                            </Sequence>
                                                                          </If.Else>
                                                                        </If>
                                                                      </Sequence>
                                                                    </Sequence>
                                                                  </ui:CommentOut.Body>
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </ui:CommentOut>
                                                              </Sequence>
                                                            </TryCatch.Try>
                                                            <TryCatch.Catches>
                                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="804,21" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ActivityAction x:TypeArguments="s:Exception">
                                                                  <ActivityAction.Argument>
                                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                  </ActivityAction.Argument>
                                                                  <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_103">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                </ActivityAction>
                                                              </Catch>
                                                            </TryCatch.Catches>
                                                          </TryCatch>
                                                        </Sequence>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_184">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="922,143" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Warn" Message="[&quot;Digital approach for OCR no. #1 done. Please find below the current extraction status: &quot;  + vbNewLine +&#xA;&quot;Date extracted: &quot; + boolDateExtracted.ToString + vbNewLine +&#xA;&quot;Currency extracted: &quot; + boolCurrencyExtracted.ToString +vbNewLine +&#xA;&quot;Shop extracted: &quot; + boolShopExtracted.ToString + vbNewLine +&#xA;&quot;Items extracted: &quot; + boolItemsExtracted.ToString + vbNewLine +&#xA;&quot;Total amount extracted: &quot; + boolTotalAmountExtracted.ToString]" />
                                                  </Sequence>
                                                  <FlowStep.Next>
                                                    <FlowDecision x:Name="__ReferenceID8" Condition="[boolDateExtracted = False Or&#xA;boolTotalAmountExtracted = False Or&#xA;boolItemsExtracted = False]" DisplayName="Missing info'?" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <av:Point x:Key="ShapeLocation">190.5,1846.5</av:Point>
                                                          <av:Size x:Key="ShapeSize">79,87</av:Size>
                                                          <av:PointCollection x:Key="TrueConnector">190.5,1890 100,1890 100,1996</av:PointCollection>
                                                          <av:PointCollection x:Key="FalseConnector">269.5,1890 400,1890 400,1994</av:PointCollection>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <FlowDecision.True>
                                                        <FlowStep x:Name="__ReferenceID14">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <av:Point x:Key="ShapeLocation">0,1996</av:Point>
                                                              <av:Size x:Key="ShapeSize">200,68</av:Size>
                                                              <av:PointCollection x:Key="ConnectorLocation">100,2065 100,2114</av:PointCollection>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <p1:DigitizeDocument ApplyOcrMigrated="True" ApplyOcrOnPdf="Auto" DegreeOfParallelism="-1" DetectCheckboxes="True" DisplayName="#OCR 2 - Digitize Document" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" ForceApplyOCR="False" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="DigitizeDocument_2">
                                                            <p1:DigitizeDocument.OCREngine>
                                                              <ActivityFunc x:TypeArguments="sd:Image, x:String, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                                                                <ActivityFunc.Argument1>
                                                                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                                </ActivityFunc.Argument1>
                                                                <ActivityFunc.Argument2>
                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                </ActivityFunc.Argument2>
                                                                <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="True" sap:VirtualizedContainerService.HintSize="312,25" sap2010:WorkflowViewState.IdRef="GoogleOCR_1" Image="[Image]" PredictionId="[PredictionId]" />
                                                              </ActivityFunc>
                                                            </p1:DigitizeDocument.OCREngine>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </p1:DigitizeDocument>
                                                          <FlowStep.Next>
                                                            <FlowStep x:Name="__ReferenceID26">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <av:Point x:Key="ShapeLocation">0,2114</av:Point>
                                                                  <av:Size x:Key="ShapeSize">200,52</av:Size>
                                                                  <av:PointCollection x:Key="ConnectorLocation">100,2167 100,2197 111.5,2197 111.5,2209.5</av:PointCollection>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="LogMessage_85" Level="Warn" Message="[strDigitalText]">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </ui:LogMessage>
                                                              <FlowStep.Next>
                                                                <FlowStep x:Name="__ReferenceID9">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <av:Point x:Key="ShapeLocation">0,2209.5</av:Point>
                                                                      <av:Size x:Key="ShapeSize">222,81</av:Size>
                                                                      <av:PointCollection x:Key="ConnectorLocation">111,2290.5 111,2320.5 230,2320.5 230,2386.5</av:PointCollection>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <Sequence DisplayName="#OCR 2 - Regex Digitally Extraction" sap:VirtualizedContainerService.HintSize="222,81" sap2010:WorkflowViewState.IdRef="Sequence_69">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="Info" Message="[&quot;Started to extract the info's with OCR #2 digital approach.&quot;]" />
                                                                    <If Condition="[boolDateExtracted = False]" DisplayName="If Date wasn't extracted with approach #1" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="If_23">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <If.Then>
                                                                        <Sequence sap:VirtualizedContainerService.HintSize="300,140" sap2010:WorkflowViewState.IdRef="Sequence_70">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                          <TryCatch DisplayName="Try - Get Date" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                                                                            <sap:WorkflowViewStateService.ViewState>
                                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                              </scg:Dictionary>
                                                                            </sap:WorkflowViewStateService.ViewState>
                                                                            <TryCatch.Try>
                                                                              <Sequence sap:VirtualizedContainerService.HintSize="800,2812" sap2010:WorkflowViewState.IdRef="Sequence_54">
                                                                                <sap:WorkflowViewStateService.ViewState>
                                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                  </scg:Dictionary>
                                                                                </sap:WorkflowViewStateService.ViewState>
                                                                                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="738,1977" sap2010:WorkflowViewState.IdRef="ForEach`1_11" Values="[in_Config(&quot;DateRegexCases&quot;).ToString.Split(&quot;X&quot;c)]">
                                                                                  <ui:ForEach.Body>
                                                                                    <ActivityAction x:TypeArguments="x:String">
                                                                                      <ActivityAction.Argument>
                                                                                        <DelegateInArgument x:TypeArguments="x:String" Name="currentText" />
                                                                                      </ActivityAction.Argument>
                                                                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="704,1791" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                        <If Condition="[currentText.ToString &lt;&gt; &quot;&quot;]" DisplayName="If valid Regex Case" sap:VirtualizedContainerService.HintSize="662,1703" sap2010:WorkflowViewState.IdRef="If_14">
                                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                            </scg:Dictionary>
                                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                                          <If.Then>
                                                                                            <Sequence sap:VirtualizedContainerService.HintSize="628,1521" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                </scg:Dictionary>
                                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                                              <Assign DisplayName="Assign - Get Date" sap:VirtualizedContainerService.HintSize="586,82" sap2010:WorkflowViewState.IdRef="Assign_30">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:String">[strDate]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strDigitalText,currentText.ToString).Value]</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                              <If Condition="[strDate.Trim &lt;&gt; &quot;&quot;]" DisplayName="If Date was identified" sap:VirtualizedContainerService.HintSize="586,1311" sap2010:WorkflowViewState.IdRef="If_53">
                                                                                                <sap:WorkflowViewStateService.ViewState>
                                                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                  </scg:Dictionary>
                                                                                                </sap:WorkflowViewStateService.ViewState>
                                                                                                <If.Then>
                                                                                                  <Sequence sap:VirtualizedContainerService.HintSize="552,1129" sap2010:WorkflowViewState.IdRef="Sequence_139">
                                                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                      </scg:Dictionary>
                                                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                                                    <Switch x:TypeArguments="x:String" DisplayName="Switch - Regex Case for Date" Expression="[currentText.ToString]" sap:VirtualizedContainerService.HintSize="510,52" sap2010:WorkflowViewState.IdRef="Switch`1_10">
                                                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                        </scg:Dictionary>
                                                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(\d{1,2}(\/|-| )\d{1,2}(\/|-)\d{2,4})" DisplayName="Data Extraction Scope - Date" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_153" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Date&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;(\\d{1,2}(\\/|-| )\\d{1,2}(\\/|-)\\d{2,4})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_149" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(\d{1,2}(\/|-)\d{1,2}(\/|-)\d{2,4})" DisplayName="Data Extraction Scope - Date" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,68" sap2010:WorkflowViewState.IdRef="DataExtractionScope_154" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Date&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;(\\d{1,2}(\\/|-)\\d{1,2}(\\/|-)\\d{2,4})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_150" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(\d{4}(\/|-)\d{1,2}(\/|-|.)\d{1,2})" DisplayName="Data Extraction Scope - Date" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_155" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Date&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;(\\d{4}(\\/|-)\\d{1,2}(\\/|-|.)\\d{1,2})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_151" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(.)(((1[0-2]|0?[1-9])\/(3[01]|[12][0-9]|0?[1-9])\/(?:[0-9]{2})?[0-9]{2})|((Jan(uary)?|Feb(ruary)?|Mar(ch)?|Apr(il)?|May|Jun(e)?|Jul(y)?|Aug(ust)?|Sep(tember)?|Oct(ober)?|Nov(ember)?|Dec(ember)?)\s+\d{1,2},\s+\d{1,4}))" DisplayName="Data Extraction Scope - Date" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,68" sap2010:WorkflowViewState.IdRef="DataExtractionScope_156" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Date&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;(.)(((1[0-2]|0?[1-9])\\/(3[01]|[12][0-9]|0?[1-9])\\/(?:[0-9]{2})?[0-9]{2})|((Jan(uary)?|Feb(ruary)?|Mar(ch)?|Apr(il)?|May|Jun(e)?|Jul(y)?|Aug(ust)?|Sep(tember)?|Oct(ober)?|Nov(ember)?|Dec(ember)?)\\s+\\d{1,2},\\s+\\d{1,4}))&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_152" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(.)(((1[0-2]|0?[1-9])\/(3[01]|[12][0-9]|0?[1-9])\/(?:[0-9]{2})?[0-9]{2})|((Jan(uary)?|Feb(ruary)?|Mar(ch)?|Apr(il)?|May|Jun(e)?|Jul(y)?|Aug(ust)?|Sep(tember)?|Oct(ober)?|Nov(ember)?|Dec(ember)?)\d{1,2}'\s+\d{1,4}))" DisplayName="Data Extraction Scope - Date" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,68" sap2010:WorkflowViewState.IdRef="DataExtractionScope_157" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Date&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;(.)(((1[0-2]|0?[1-9])\\/(3[01]|[12][0-9]|0?[1-9])\\/(?:[0-9]{2})?[0-9]{2})|((Jan(uary)?|Feb(ruary)?|Mar(ch)?|Apr(il)?|May|Jun(e)?|Jul(y)?|Aug(ust)?|Sep(tember)?|Oct(ober)?|Nov(ember)?|Dec(ember)?)\\d{1,2}'\\s+\\d{1,4}))&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_153" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="\w{3} \d{1,2},.\d{1,4}" DisplayName="Data Extraction Scope - Date" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,68" sap2010:WorkflowViewState.IdRef="DataExtractionScope_158" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Date&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;(\\w{3} \\d{1,2},.\\d{1,4})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_154" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(.)(((1[0-2]|0?[1-9])\/(3[01]|[12][0-9]|0?[1-9])\/(?:[0-9]{2})?[0-9]{2})|((Jan(uary)?|Feb(ruary)?|Mar(ch)?|Apr(il)?|May|Jun(e)?|Jul(y)?|Aug(ust)?|Sep(tember)?|Oct(ober)?|Nov(ember)?|Dec(ember)?)\d{1,2}'+\d{1,4}))" DisplayName="Data Extraction Scope - Date" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_159" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Date&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;(.)(((1[0-2]|0?[1-9])\\/(3[01]|[12][0-9]|0?[1-9])\\/(?:[0-9]{2})?[0-9]{2})|((Jan(uary)?|Feb(ruary)?|Mar(ch)?|Apr(il)?|May|Jun(e)?|Jul(y)?|Aug(ust)?|Sep(tember)?|Oct(ober)?|Nov(ember)?|Dec(ember)?)\\d{1,2}'+\\d{1,4}))&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_155" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="[01]?[0-9][-.][0-3]?[0-9][-.]\d{4}" DisplayName="Data Extraction Scope - Date" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_160" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Date&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;([01]?[0-9][-.][0-3]?[0-9][-.]\\d{4})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_156" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="\w{5}' \d{1,2}" DisplayName="Data Extraction Scope - Date" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_161" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Date&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;(\\w{5}' \\d{1,2})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_157" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="\d{1,2}(.)(((1[0-2]|0?[1-9])\/(3[01]|[12][0-9]|0?[1-9])\/(?:[0-9]{2})?[0-9]{2})|((Jan(uary)?|Feb(ruary)?|Mar(ch)?|Apr(il)?|May|Jun(e)?|Jul(y)?|Aug(ust)?|Sep(tember)?|Oct(ober)?|Nov(ember)?|Dec(ember)?)+\d{1,4}))" DisplayName="Data Extraction Scope - Date" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_162" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Date&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;(\\d{1,2}(.)(((1[0-2]|0?[1-9])\\/(3[01]|[12][0-9]|0?[1-9])\\/(?:[0-9]{2})?[0-9]{2})|((Jan(uary)?|Feb(ruary)?|Mar(ch)?|Apr(il)?|May|Jun(e)?|Jul(y)?|Aug(ust)?|Sep(tember)?|Oct(ober)?|Nov(ember)?|Dec(ember)?)+\\d{1,4})))&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_158" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="[A-Za-z0-9]+'[0-9]+" DisplayName="Data Extraction Scope - Date" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_163" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Date&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;([A-Za-z0-9]+'[0-9]+)&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_159" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;!\S)\d{1,2}/\d{1,2}/\d{4}(?!\S)(?!.*\d{1,2}/\d{1,2}/\d{4})" DisplayName="Data Extraction Scope - Date" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_164" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Date&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;!\\S)\\d{1,2}/\\d{1,2}/\\d{4}(?!\\S)(?!.*\\d{1,2}/\\d{1,2}/\\d{4}))&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_160" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="\b\d{2}/\d{2}/\d{2}\b(?!\d{2}/\d{2}/\d{2})" DisplayName="Data Extraction Scope - Date" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_165" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Date&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;(\\b\\d{2}/\\d{2}/\\d{2}\\b(?!\\d{2}/\\d{2}/\\d{2}))&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_161" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                    </Switch>
                                                                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="LogMessage_71" Level="[UiPath.Core.Activities.LogLevel.Trace]" Message="[&quot;OCR #2 - DATE Confidence extractor: &quot; + (CDec(extractionResultsOCR1.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(&quot;Date&quot;)).Select(Function(actual_field) actual_field.Values.Select(Function(val) val.Confidence))(0)(0))*100).ToString]">
                                                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                        </scg:Dictionary>
                                                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                                                    </ui:LogMessage>
                                                                                                    <ui:LogMessage DisplayName="TBR" sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="LogMessage_72" Level="[UiPath.Core.Activities.LogLevel.Trace]" Message="[currentText]" />
                                                                                                    <If Condition="[CDec(extractionResultsOCR1.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(&quot;Date&quot;)).Select(Function(actual_field) actual_field.Values.Select(Function(val) val.Confidence))(0)(0)) &lt; in_dblMinimumAgreedOCRClassifierConfidence]" DisplayName="If threshold not met" sap:VirtualizedContainerService.HintSize="510,587" sap2010:WorkflowViewState.IdRef="If_54">
                                                                                                      <If.Then>
                                                                                                        <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_137">
                                                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            </scg:Dictionary>
                                                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                                                          <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_77">
                                                                                                            <Assign.To>
                                                                                                              <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                                            </Assign.To>
                                                                                                            <Assign.Value>
                                                                                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                                            </Assign.Value>
                                                                                                          </Assign>
                                                                                                        </Sequence>
                                                                                                      </If.Then>
                                                                                                      <If.Else>
                                                                                                        <Sequence sap:VirtualizedContainerService.HintSize="476,235" sap2010:WorkflowViewState.IdRef="Sequence_138">
                                                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            </scg:Dictionary>
                                                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                                                          <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_78">
                                                                                                            <Assign.To>
                                                                                                              <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                                            </Assign.To>
                                                                                                            <Assign.Value>
                                                                                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                            </Assign.Value>
                                                                                                          </Assign>
                                                                                                          <ui:Break sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="Break_6" />
                                                                                                        </Sequence>
                                                                                                      </If.Else>
                                                                                                    </If>
                                                                                                  </Sequence>
                                                                                                </If.Then>
                                                                                                <If.Else>
                                                                                                  <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_140">
                                                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                      </scg:Dictionary>
                                                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                                                    <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_79">
                                                                                                      <Assign.To>
                                                                                                        <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                                      </Assign.To>
                                                                                                      <Assign.Value>
                                                                                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                                      </Assign.Value>
                                                                                                    </Assign>
                                                                                                  </Sequence>
                                                                                                </If.Else>
                                                                                              </If>
                                                                                            </Sequence>
                                                                                          </If.Then>
                                                                                          <If.Else>
                                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                </scg:Dictionary>
                                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                                            </Sequence>
                                                                                          </If.Else>
                                                                                        </If>
                                                                                      </Sequence>
                                                                                    </ActivityAction>
                                                                                  </ui:ForEach.Body>
                                                                                </ui:ForEach>
                                                                                <If Condition="[boolDateExtracted]" DisplayName="If date was extracted" sap:VirtualizedContainerService.HintSize="738,592" sap2010:WorkflowViewState.IdRef="If_15">
                                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                    </scg:Dictionary>
                                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                                  <If.Then>
                                                                                    <Sequence sap:VirtualizedContainerService.HintSize="376,410" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                        </scg:Dictionary>
                                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Warn" Message="[&quot;DATE was extracted: &quot; + strDate]" />
                                                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_83" Level="Warn" Message="[&quot;OCR #2 - DATE Confidence extractor: &quot; + (CDec(extractionResultsOCR1.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(&quot;Date&quot;)).Select(Function(actual_field) actual_field.Values.Select(Function(val) val.Confidence))(0)(0))*100).ToString]">
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </ui:LogMessage>
                                                                                    </Sequence>
                                                                                  </If.Then>
                                                                                  <If.Else>
                                                                                    <Sequence sap:VirtualizedContainerService.HintSize="400,203" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                        </scg:Dictionary>
                                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="Warn" Message="[&quot;Date couldn't be digitally extracted.&quot;]" />
                                                                                    </Sequence>
                                                                                  </If.Else>
                                                                                </If>
                                                                                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="738,52" sap2010:WorkflowViewState.IdRef="CommentOut_5">
                                                                                  <ui:CommentOut.Body>
                                                                                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="558,746" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                        </scg:Dictionary>
                                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                                      <Sequence DisplayName="OLD" sap:VirtualizedContainerService.HintSize="496,637" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                        <Assign DisplayName="Assign - Get Date" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_33">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[strDate]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strDigitalText,"(\d{1,2}(\/|-)\d{1,2}(\/|-)\d{2,4})").Value]</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                        <If Condition="[strDate.Trim = &quot;&quot;]" DisplayName="If date wasn't extracted" sap:VirtualizedContainerService.HintSize="434,182" sap2010:WorkflowViewState.IdRef="If_16">
                                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                            </scg:Dictionary>
                                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                                          <If.Then>
                                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_48">
                                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                </scg:Dictionary>
                                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                                              <Assign DisplayName="Assign - Get Date" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_34">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:String">[strDate]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strDigitalText,"(\d{4}(\/|-)\d{1,2}(\/|-|.)\d{1,2})").Value]</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                            </Sequence>
                                                                                          </If.Then>
                                                                                          <If.Else>
                                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                </scg:Dictionary>
                                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                                              <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_35">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                            </Sequence>
                                                                                          </If.Else>
                                                                                        </If>
                                                                                        <If Condition="[strDate.Trim = &quot;&quot; and boolDateExtracted = False]" DisplayName="If date wasn't extracted" sap:VirtualizedContainerService.HintSize="434,182" sap2010:WorkflowViewState.IdRef="If_17">
                                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                            </scg:Dictionary>
                                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                                          <If.Then>
                                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,304" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                </scg:Dictionary>
                                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_25" Level="Warn" Message="[&quot;Wasn't able to digitally extract the date.&quot;]" />
                                                                                              <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_36">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                            </Sequence>
                                                                                          </If.Then>
                                                                                          <If.Else>
                                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,304" sap2010:WorkflowViewState.IdRef="Sequence_51">
                                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                </scg:Dictionary>
                                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                                              <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_37">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Info" Message="[&quot;Extracted date is: &quot; + strDate]" />
                                                                                            </Sequence>
                                                                                          </If.Else>
                                                                                        </If>
                                                                                      </Sequence>
                                                                                    </Sequence>
                                                                                  </ui:CommentOut.Body>
                                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                    </scg:Dictionary>
                                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                                </ui:CommentOut>
                                                                              </Sequence>
                                                                            </TryCatch.Try>
                                                                            <TryCatch.Catches>
                                                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="804,21" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                                                                <sap:WorkflowViewStateService.ViewState>
                                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                  </scg:Dictionary>
                                                                                </sap:WorkflowViewStateService.ViewState>
                                                                                <ActivityAction x:TypeArguments="s:Exception">
                                                                                  <ActivityAction.Argument>
                                                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                  </ActivityAction.Argument>
                                                                                  <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_38">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                </ActivityAction>
                                                                              </Catch>
                                                                            </TryCatch.Catches>
                                                                          </TryCatch>
                                                                        </Sequence>
                                                                      </If.Then>
                                                                      <If.Else>
                                                                        <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_71">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                        </Sequence>
                                                                      </If.Else>
                                                                    </If>
                                                                    <If Condition="[boolTotalAmountExtracted = False]" DisplayName="If Total wasn't extracted with approach #1" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="If_24">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <If.Then>
                                                                        <Sequence sap:VirtualizedContainerService.HintSize="530,927" sap2010:WorkflowViewState.IdRef="Sequence_72">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                          <TryCatch DisplayName="Try - Get Total" sap:VirtualizedContainerService.HintSize="488,839" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                                                                            <sap:WorkflowViewStateService.ViewState>
                                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                              </scg:Dictionary>
                                                                            </sap:WorkflowViewStateService.ViewState>
                                                                            <TryCatch.Try>
                                                                              <Sequence sap:VirtualizedContainerService.HintSize="450,611" sap2010:WorkflowViewState.IdRef="Sequence_68">
                                                                                <sap:WorkflowViewStateService.ViewState>
                                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                  </scg:Dictionary>
                                                                                </sap:WorkflowViewStateService.ViewState>
                                                                                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="388,186" sap2010:WorkflowViewState.IdRef="ForEach`1_12" Values="[in_Config(&quot;TotalAmountRegexCases&quot;).ToString.Split(&quot;X&quot;c)]">
                                                                                  <ui:ForEach.Body>
                                                                                    <ActivityAction x:TypeArguments="x:String">
                                                                                      <ActivityAction.Argument>
                                                                                        <DelegateInArgument x:TypeArguments="x:String" Name="currentItem" />
                                                                                      </ActivityAction.Argument>
                                                                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,270" sap2010:WorkflowViewState.IdRef="Sequence_59">
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                        <If Condition="[currentItem.ToString &lt;&gt; &quot;&quot;]" DisplayName="If valid Regex Case" sap:VirtualizedContainerService.HintSize="334,182" sap2010:WorkflowViewState.IdRef="If_19">
                                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                            </scg:Dictionary>
                                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                                          <If.Then>
                                                                                            <Sequence sap:VirtualizedContainerService.HintSize="628,1521" sap2010:WorkflowViewState.IdRef="Sequence_57">
                                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                </scg:Dictionary>
                                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                                              <Assign DisplayName="Assign - Get Amount" sap:VirtualizedContainerService.HintSize="586,82" sap2010:WorkflowViewState.IdRef="Assign_39">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:String">[strTotalAmount]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strDigitalText,currentItem.ToString, RegexOptions.RightToLeft).Value]</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                              <If Condition="[strTotalAmount.Trim &lt;&gt; &quot;&quot; and strTotalAmount.Trim.Count &lt; 10]" DisplayName="If Amount was identified" sap:VirtualizedContainerService.HintSize="586,1311" sap2010:WorkflowViewState.IdRef="If_55">
                                                                                                <sap:WorkflowViewStateService.ViewState>
                                                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                  </scg:Dictionary>
                                                                                                </sap:WorkflowViewStateService.ViewState>
                                                                                                <If.Then>
                                                                                                  <Sequence sap:VirtualizedContainerService.HintSize="552,1129" sap2010:WorkflowViewState.IdRef="Sequence_143">
                                                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                      </scg:Dictionary>
                                                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                                                    <Switch x:TypeArguments="x:String" DisplayName="Switch - Regex Case for Amount" Expression="[currentItem.ToString]" sap:VirtualizedContainerService.HintSize="510,52" sap2010:WorkflowViewState.IdRef="Switch`1_11">
                                                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                        </scg:Dictionary>
                                                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key=" (?&lt;=TOTAŁ DUE)*\$(\s(([+-]?(?=\.\d|\d)(?:\d+)?(?:\.?\d*))(?:[Ee]([+-]?\d+))?\s)+)" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_166" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;(?&lt;=TOTAŁ DUE)*\\$(\\s(([+-]?(?=\\.\\d|\\d)(?:\\d+)?(?:\\.?\\d*))(?:[Ee]([+-]?\\d+))?\\s)+)&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_162" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=TOTAL:\r?\n\s*)\S.*" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_167" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=TOTAL:\\r?\\n\\s*)\\S.*)&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_163" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=TOTAL\r?\n\s*)\S.*" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_168" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=TOTAL\\r?\\n\\s*)\\S.*)&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_164" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=Total\r?\n\s*)\S.*" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_169" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=Total\\r?\\n\\s*)\\S.*)&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_165" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=TOTAL:.*)\d{1,5}\.\d{1,3}" DisplayName="NOU DataExtractionScope" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_170" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI3ab7e5d80f4c42ab88a5171722e06169&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;&quot;,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI3ab7e5d80f4c42ab88a5171722e06169&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI3ab7e5d80f4c42ab88a5171722e06169&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=TOTAL:.*)\\d{1,5}\\.\\d{1,3}?)&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_166" PersistenceId="UI3ab7e5d80f4c42ab88a5171722e06169" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=TOTAŁ.*DUE.*)\d{1,5}\.\d{1,3}" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_171" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=TOTAŁ.*DUE.*)\\d{1,5}\\.\\d{1,3})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_167" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=Amount Due.*)\d{1,5}\.\d{1,3}" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_172" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=Amount Due.*)\\d{1,5}\\.\\d{1,3})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_168" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=lance Due.*)\d{1,5}\.\d{1,3}" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_173" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=lance Due.*)\\d{1,5}\\.\\d{1,3})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_169" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=Amt Due:.*)\d{1,5}\.\d{1,3}" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_174" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=Amt Due:.*)\\d{1,5}\\.\\d{1,3})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_170" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=TOTAL .*)\d{1,5}\.\d{1,3}" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_175" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=TOTAL .*)\\d{1,5}\\.\\d{1,3})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_171" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;= Total.*)\d{1,5}\.\d{1,3}" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_176" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;= Total.*)\\d{1,5}\\.\\d{1,3})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_172" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;= Total )\d{1,5}\.\d{1,3}" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_177" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;= Total )\\d{1,5}\\.\\d{1,3})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_173" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=TOTAL.[^\d]+)[\d\,\.]+|(?&lt;=TOTAL:.[^\d]+)[\d\,\.]+|(?&lt;=Total..[^\d]+)[\d\,\.]+|(?&lt;=Grand Total.[^\d]+)[\d\,\.]+|(?&lt;=Balance Due[^\d]+)[\d\,\.]+" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_178" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=TOTAL.[^\\d]+)[\\d\\,\\.]+|(?&lt;=TOTAL:.[^\\d]+)[\\d\\,\\.]+|(?&lt;=Total..[^\\d]+)[\\d\\,\\.]+|(?&lt;=Grand Total.[^\\d]+)[\\d\\,\\.]+|(?&lt;=Balance Due[^\\d]+)[\\d\\,\\.]+)&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_174" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=TL.*)\d{1,5}\.\d{1,3}" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_179" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=TL.*)\\d{1,5}\\.\\d{1,3})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_175" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="\d{1,5}[.]\d{1,5}" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_180" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;(\\d{1,5}[.]\\d{1,5})&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_176" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=Incl.\s+of\s+GST...)[^0-9]*([\d.]+)" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_181" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=Incl.\\s+of\\s+GST...)[^0-9]*([\\d.]+))&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_177" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=Total\sSales\s\(Inclusive\sof\sGST\)\s:\s*)\d+\.\d+" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_182" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=Total\\sSales\\s\\(Inclusive\\sof\\sGST\\)\\s:\\s*)\\d+\\.\\d+)&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_178" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=TOTAL:.*)\$([\d.]+)" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_183" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=TOTAL:.*)\\$([\\d.]+))&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_179" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?&lt;=Total: )([\d.]+)" DisplayName="Data Extraction Scope - Amount" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_184" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Total&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?&lt;=Total: )([\\d.]+))&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_180" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                    </Switch>
                                                                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="LogMessage_73" Level="[UiPath.Core.Activities.LogLevel.Trace]" Message="[&quot;OCR #2 - TOTAL Amount Confidence extractor: &quot; + (CDec(extractionResultsOCR1.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(&quot;Total&quot;)).Select(Function(actual_field) actual_field.Values.Select(Function(val) val.Confidence))(0)(0))*100).ToString]">
                                                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                        </scg:Dictionary>
                                                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                                                    </ui:LogMessage>
                                                                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="LogMessage_74" Level="[UiPath.Core.Activities.LogLevel.Trace]" Message="[currentItem]" />
                                                                                                    <If Condition="[CDec(extractionResultsOCR1.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(&quot;Total&quot;)).Select(Function(actual_field) actual_field.Values.Select(Function(val) val.Confidence))(0)(0)) &lt; in_dblMinimumAgreedOCRClassifierConfidence]" DisplayName="If threshold not meet" sap:VirtualizedContainerService.HintSize="510,587" sap2010:WorkflowViewState.IdRef="If_56">
                                                                                                      <If.Then>
                                                                                                        <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_141">
                                                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            </scg:Dictionary>
                                                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                                                          <Assign DisplayName="Assign Amount Bool" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_80">
                                                                                                            <Assign.To>
                                                                                                              <OutArgument x:TypeArguments="x:Boolean">[boolTotalAmountExtracted]</OutArgument>
                                                                                                            </Assign.To>
                                                                                                            <Assign.Value>
                                                                                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                                            </Assign.Value>
                                                                                                          </Assign>
                                                                                                        </Sequence>
                                                                                                      </If.Then>
                                                                                                      <If.Else>
                                                                                                        <Sequence sap:VirtualizedContainerService.HintSize="476,235" sap2010:WorkflowViewState.IdRef="Sequence_142">
                                                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            </scg:Dictionary>
                                                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                                                          <Assign DisplayName="Assign Amount Bool" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_81">
                                                                                                            <Assign.To>
                                                                                                              <OutArgument x:TypeArguments="x:Boolean">[boolTotalAmountExtracted]</OutArgument>
                                                                                                            </Assign.To>
                                                                                                            <Assign.Value>
                                                                                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                            </Assign.Value>
                                                                                                          </Assign>
                                                                                                          <ui:Break sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="Break_7" />
                                                                                                        </Sequence>
                                                                                                      </If.Else>
                                                                                                    </If>
                                                                                                  </Sequence>
                                                                                                </If.Then>
                                                                                                <If.Else>
                                                                                                  <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_144">
                                                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                      </scg:Dictionary>
                                                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                                                    <Assign DisplayName="Assign Amount Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_82">
                                                                                                      <Assign.To>
                                                                                                        <OutArgument x:TypeArguments="x:Boolean">[boolTotalAmountExtracted]</OutArgument>
                                                                                                      </Assign.To>
                                                                                                      <Assign.Value>
                                                                                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                                      </Assign.Value>
                                                                                                    </Assign>
                                                                                                  </Sequence>
                                                                                                </If.Else>
                                                                                              </If>
                                                                                            </Sequence>
                                                                                          </If.Then>
                                                                                          <If.Else>
                                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_58">
                                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                </scg:Dictionary>
                                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                                            </Sequence>
                                                                                          </If.Else>
                                                                                        </If>
                                                                                      </Sequence>
                                                                                    </ActivityAction>
                                                                                  </ui:ForEach.Body>
                                                                                </ui:ForEach>
                                                                                <If Condition="[boolTotalAmountExtracted and (strTotalAmount.Contains(&quot;.&quot;) OR strTotalAmount.Contains(&quot;,&quot;))]" DisplayName="If amount was extracted" sap:VirtualizedContainerService.HintSize="388,182" sap2010:WorkflowViewState.IdRef="If_20">
                                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                    </scg:Dictionary>
                                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                                  <If.Then>
                                                                                    <Sequence sap:VirtualizedContainerService.HintSize="376,410" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                        </scg:Dictionary>
                                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_27" Level="Warn" Message="[&quot;TOTAL Amount was extracted: &quot; + strTotalAmount]" />
                                                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_84" Level="Warn" Message="[&quot;OCR #2 - TOTAL Amount Confidence extractor: &quot; + (CDec(extractionResultsOCR1.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(&quot;Total&quot;)).Select(Function(actual_field) actual_field.Values.Select(Function(val) val.Confidence))(0)(0))*100).ToString]">
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </ui:LogMessage>
                                                                                    </Sequence>
                                                                                  </If.Then>
                                                                                  <If.Else>
                                                                                    <Sequence sap:VirtualizedContainerService.HintSize="400,203" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                        </scg:Dictionary>
                                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Warn" Message="[&quot;Amount couldn't be digitally extracted.&quot;]" />
                                                                                    </Sequence>
                                                                                  </If.Else>
                                                                                </If>
                                                                                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="CommentOut_6">
                                                                                  <ui:CommentOut.Body>
                                                                                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="558,746" sap2010:WorkflowViewState.IdRef="Sequence_67">
                                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                        </scg:Dictionary>
                                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                                      <Sequence DisplayName="OLD" sap:VirtualizedContainerService.HintSize="496,637" sap2010:WorkflowViewState.IdRef="Sequence_66">
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                        <Assign DisplayName="Assign - Get Date" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_42">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[strDate]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strDigitalText,"(\d{1,2}(\/|-)\d{1,2}(\/|-)\d{2,4})").Value]</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                        <If Condition="[strDate.Trim = &quot;&quot;]" DisplayName="If date wasn't extracted" sap:VirtualizedContainerService.HintSize="434,182" sap2010:WorkflowViewState.IdRef="If_21">
                                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                            </scg:Dictionary>
                                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                                          <If.Then>
                                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                </scg:Dictionary>
                                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                                              <Assign DisplayName="Assign - Get Date" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_43">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:String">[strDate]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strDigitalText,"(\d{4}(\/|-)\d{1,2}(\/|-|.)\d{1,2})").Value]</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                            </Sequence>
                                                                                          </If.Then>
                                                                                          <If.Else>
                                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                </scg:Dictionary>
                                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                                              <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_44">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                            </Sequence>
                                                                                          </If.Else>
                                                                                        </If>
                                                                                        <If Condition="[strDate.Trim = &quot;&quot; and boolDateExtracted = False]" DisplayName="If date wasn't extracted" sap:VirtualizedContainerService.HintSize="434,182" sap2010:WorkflowViewState.IdRef="If_22">
                                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                            </scg:Dictionary>
                                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                                          <If.Then>
                                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,306" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                </scg:Dictionary>
                                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,94" sap2010:WorkflowViewState.IdRef="LogMessage_29" Level="Warn" Message="[&quot;Wasn't able to digitally extract the date.&quot;]" />
                                                                                              <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_45">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                            </Sequence>
                                                                                          </If.Then>
                                                                                          <If.Else>
                                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,306" sap2010:WorkflowViewState.IdRef="Sequence_65">
                                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                </scg:Dictionary>
                                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                                              <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_46">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,94" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="Info" Message="[&quot;Extracted date is: &quot; + strDate]" />
                                                                                            </Sequence>
                                                                                          </If.Else>
                                                                                        </If>
                                                                                      </Sequence>
                                                                                    </Sequence>
                                                                                  </ui:CommentOut.Body>
                                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                    </scg:Dictionary>
                                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                                </ui:CommentOut>
                                                                              </Sequence>
                                                                            </TryCatch.Try>
                                                                            <TryCatch.Catches>
                                                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="454,21" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                                                                                <sap:WorkflowViewStateService.ViewState>
                                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                  </scg:Dictionary>
                                                                                </sap:WorkflowViewStateService.ViewState>
                                                                                <ActivityAction x:TypeArguments="s:Exception">
                                                                                  <ActivityAction.Argument>
                                                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                  </ActivityAction.Argument>
                                                                                  <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_47">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                </ActivityAction>
                                                                              </Catch>
                                                                            </TryCatch.Catches>
                                                                          </TryCatch>
                                                                        </Sequence>
                                                                      </If.Then>
                                                                      <If.Else>
                                                                        <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_73">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                        </Sequence>
                                                                      </If.Else>
                                                                    </If>
                                                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="CommentOut_24">
                                                                      <ui:CommentOut.Body>
                                                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,293" sap2010:WorkflowViewState.IdRef="Sequence_147">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                          <If Condition="[boolShopExtracted = False]" DisplayName="If Shop wasn't extracted with approach #1" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="If_25">
                                                                            <sap:WorkflowViewStateService.ViewState>
                                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                              </scg:Dictionary>
                                                                            </sap:WorkflowViewStateService.ViewState>
                                                                            <If.Then>
                                                                              <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_74">
                                                                                <sap:WorkflowViewStateService.ViewState>
                                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                  </scg:Dictionary>
                                                                                </sap:WorkflowViewStateService.ViewState>
                                                                              </Sequence>
                                                                            </If.Then>
                                                                            <If.Else>
                                                                              <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_75">
                                                                                <sap:WorkflowViewStateService.ViewState>
                                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                  </scg:Dictionary>
                                                                                </sap:WorkflowViewStateService.ViewState>
                                                                              </Sequence>
                                                                            </If.Else>
                                                                          </If>
                                                                        </Sequence>
                                                                      </ui:CommentOut.Body>
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                    </ui:CommentOut>
                                                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="CommentOut_25">
                                                                      <ui:CommentOut.Body>
                                                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,293" sap2010:WorkflowViewState.IdRef="Sequence_148">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                          <If Condition="[boolCurrencyExtracted = False]" DisplayName="If Currency wasn't extracted" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="If_26">
                                                                            <sap:WorkflowViewStateService.ViewState>
                                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                              </scg:Dictionary>
                                                                            </sap:WorkflowViewStateService.ViewState>
                                                                            <If.Then>
                                                                              <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_76">
                                                                                <sap:WorkflowViewStateService.ViewState>
                                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                  </scg:Dictionary>
                                                                                </sap:WorkflowViewStateService.ViewState>
                                                                              </Sequence>
                                                                            </If.Then>
                                                                            <If.Else>
                                                                              <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_77">
                                                                                <sap:WorkflowViewStateService.ViewState>
                                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                  </scg:Dictionary>
                                                                                </sap:WorkflowViewStateService.ViewState>
                                                                              </Sequence>
                                                                            </If.Else>
                                                                          </If>
                                                                        </Sequence>
                                                                      </ui:CommentOut.Body>
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                    </ui:CommentOut>
                                                                    <If Condition="[boolItemsExtracted = False]" DisplayName="If Items were not extracted" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="If_72">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <If.Then>
                                                                        <Sequence sap:VirtualizedContainerService.HintSize="880,2712" sap2010:WorkflowViewState.IdRef="Sequence_201">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                          <TryCatch DisplayName="Try - Get Line Items" sap:VirtualizedContainerService.HintSize="838,2624" sap2010:WorkflowViewState.IdRef="TryCatch_10">
                                                                            <sap:WorkflowViewStateService.ViewState>
                                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                              </scg:Dictionary>
                                                                            </sap:WorkflowViewStateService.ViewState>
                                                                            <TryCatch.Try>
                                                                              <Sequence sap:VirtualizedContainerService.HintSize="800,2396" sap2010:WorkflowViewState.IdRef="Sequence_200">
                                                                                <sap:WorkflowViewStateService.ViewState>
                                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                  </scg:Dictionary>
                                                                                </sap:WorkflowViewStateService.ViewState>
                                                                                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="738,1561" sap2010:WorkflowViewState.IdRef="ForEach`1_21" Values="[in_Config(&quot;LineItemsRegexCases&quot;).ToString.Split(&quot;X&quot;c)]">
                                                                                  <ui:ForEach.Body>
                                                                                    <ActivityAction x:TypeArguments="x:String">
                                                                                      <ActivityAction.Argument>
                                                                                        <DelegateInArgument x:TypeArguments="x:String" Name="currentText" />
                                                                                      </ActivityAction.Argument>
                                                                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="704,1375" sap2010:WorkflowViewState.IdRef="Sequence_191">
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                        <If Condition="[currentText.ToString &lt;&gt; &quot;&quot;]" DisplayName="If valid Regex Case" sap:VirtualizedContainerService.HintSize="662,1287" sap2010:WorkflowViewState.IdRef="If_73">
                                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                            </scg:Dictionary>
                                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                                          <If.Then>
                                                                                            <Sequence sap:VirtualizedContainerService.HintSize="628,1105" sap2010:WorkflowViewState.IdRef="Sequence_189">
                                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                </scg:Dictionary>
                                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                                              <Assign DisplayName="Assign - Get Items" sap:VirtualizedContainerService.HintSize="586,82" sap2010:WorkflowViewState.IdRef="Assign_104">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:String">[strItems]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strDigitalText,currentText.ToString).Value]</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                              <If Condition="[strItems.Trim &lt;&gt; &quot;&quot;]" DisplayName="If Line Items were identified" sap:VirtualizedContainerService.HintSize="586,895" sap2010:WorkflowViewState.IdRef="If_74">
                                                                                                <sap:WorkflowViewStateService.ViewState>
                                                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                  </scg:Dictionary>
                                                                                                </sap:WorkflowViewStateService.ViewState>
                                                                                                <If.Then>
                                                                                                  <Sequence sap:VirtualizedContainerService.HintSize="552,713" sap2010:WorkflowViewState.IdRef="Sequence_187">
                                                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                      </scg:Dictionary>
                                                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                                                    <Switch x:TypeArguments="x:String" DisplayName="Switch - Regex Case for Line Items" Expression="[currentText.ToString]" sap:VirtualizedContainerService.HintSize="510,52" sap2010:WorkflowViewState.IdRef="Switch`1_14">
                                                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                        </scg:Dictionary>
                                                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                                                      <p9:DataExtractionScope ClassificationResult="{x:Null}" x:Key="(?m)^\d+\s+.+?\s+(\d+\.\d{2}|(?=\s*$))" DisplayName="Data Extraction Scope - Line Items" DocumentObjectModel="[DOM]" DocumentPath="[in_strDocumentPath]" DocumentText="[strDigitalText]" DocumentTypeId="[&quot;AEG.Documents.&quot; + in_strDocumentType]" ExtractionResult="[extractionResultsOCR1]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,398" sap2010:WorkflowViewState.IdRef="DataExtractionScope_199" Taxonomy="[in_Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;AEG.Documents.Receipt&quot;:{&quot;FieldMappings&quot;:{&quot;AEG.Documents.Receipt.Date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Shop&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Shop&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Currency&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Currency&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;AEG.Documents.Receipt.Items&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Quantity&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Quantity&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Items.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Items.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;AEG.Documents.Receipt.Total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;AEG.Documents.Receipt.Total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI9c62e3204daf4d41ae94627036fc83dd&quot;:[]}}">
                                                                                                        <p9:DataExtractionScope.Extractors>
                                                                                                          <p9:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;RowConfiguration&quot;&quot;:{&quot;&quot;Expression&quot;&quot;:null,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null},&quot;&quot;ColumnConfigurations&quot;&quot;:[],&quot;&quot;FieldId&quot;&quot;:&quot;&quot;AEG.Documents.Receipt.Items&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;((?m)^\\d+\\s+.+?\\s+(\\d+\\.\\d{2}|(?=\\s*$)))&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:null}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="234,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_195" PersistenceId="UI9c62e3204daf4d41ae94627036fc83dd" Timeout="2000" UseVisualAlignment="False">
                                                                                                            <p9:RegexBasedExtractor.DocumentBounds>
                                                                                                              <InArgument x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p8:ResultsDocumentBounds">
                                                                                                                  <DelegateInArgument x:TypeArguments="p8:ResultsDocumentBounds" Name="DocumentBounds" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentBounds>
                                                                                                            <p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                              <InArgument x:TypeArguments="p6:Document">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p6:Document">
                                                                                                                  <DelegateInArgument x:TypeArguments="p6:Document" Name="DocumentObjectModel" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentObjectModel>
                                                                                                            <p9:RegexBasedExtractor.DocumentPath>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentPath>
                                                                                                            <p9:RegexBasedExtractor.DocumentText>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.DocumentText>
                                                                                                            <p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                              <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                                                                                                  <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorDocumentType>
                                                                                                            <p9:RegexBasedExtractor.ExtractorResult>
                                                                                                              <OutArgument x:TypeArguments="p10:ExtractorResult">
                                                                                                                <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                                                                                                  <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                                                                                                </DelegateArgumentReference>
                                                                                                              </OutArgument>
                                                                                                            </p9:RegexBasedExtractor.ExtractorResult>
                                                                                                            <p9:RegexBasedExtractor.PredictionId>
                                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                                <DelegateArgumentValue x:TypeArguments="x:String">
                                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                                                                                </DelegateArgumentValue>
                                                                                                              </InArgument>
                                                                                                            </p9:RegexBasedExtractor.PredictionId>
                                                                                                          </p9:RegexBasedExtractor>
                                                                                                        </p9:DataExtractionScope.Extractors>
                                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                          </scg:Dictionary>
                                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                                      </p9:DataExtractionScope>
                                                                                                    </Switch>
                                                                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="LogMessage_101" Level="[UiPath.Core.Activities.LogLevel.Trace]" Message="[&quot;OCR #2 - Line Items Confidence extractor: &quot; + (CDec(extractionResultsOCR1.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(&quot;Items&quot;)).Select(Function(actual_field) actual_field.Values.Select(Function(val) val.Confidence))(0)(0))*100).ToString]">
                                                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                        </scg:Dictionary>
                                                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                                                    </ui:LogMessage>
                                                                                                    <If Condition="[CDec(extractionResultsOCR1.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(&quot;Items&quot;)).Select(Function(actual_field) actual_field.Values.Select(Function(val) val.Confidence))(0)(0)) &lt; in_dblMinimumAgreedOCRClassifierConfidence]" DisplayName="If threshold not met" sap:VirtualizedContainerService.HintSize="510,352" sap2010:WorkflowViewState.IdRef="If_75">
                                                                                                      <If.Then>
                                                                                                        <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_185">
                                                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            </scg:Dictionary>
                                                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                                                          <Assign DisplayName="Assign Items Bool" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_105">
                                                                                                            <Assign.To>
                                                                                                              <OutArgument x:TypeArguments="x:Boolean">[boolItemsExtracted]</OutArgument>
                                                                                                            </Assign.To>
                                                                                                            <Assign.Value>
                                                                                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                                            </Assign.Value>
                                                                                                          </Assign>
                                                                                                        </Sequence>
                                                                                                      </If.Then>
                                                                                                      <If.Else>
                                                                                                        <Sequence sap:VirtualizedContainerService.HintSize="476,235" sap2010:WorkflowViewState.IdRef="Sequence_186">
                                                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                            </scg:Dictionary>
                                                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                                                          <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_106">
                                                                                                            <Assign.To>
                                                                                                              <OutArgument x:TypeArguments="x:Boolean">[boolItemsExtracted]</OutArgument>
                                                                                                            </Assign.To>
                                                                                                            <Assign.Value>
                                                                                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                            </Assign.Value>
                                                                                                          </Assign>
                                                                                                          <ui:Break sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="Break_10" />
                                                                                                        </Sequence>
                                                                                                      </If.Else>
                                                                                                    </If>
                                                                                                  </Sequence>
                                                                                                </If.Then>
                                                                                                <If.Else>
                                                                                                  <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_188">
                                                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                      </scg:Dictionary>
                                                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                                                    <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_107">
                                                                                                      <Assign.To>
                                                                                                        <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                                      </Assign.To>
                                                                                                      <Assign.Value>
                                                                                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                                      </Assign.Value>
                                                                                                    </Assign>
                                                                                                  </Sequence>
                                                                                                </If.Else>
                                                                                              </If>
                                                                                            </Sequence>
                                                                                          </If.Then>
                                                                                          <If.Else>
                                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_190">
                                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                </scg:Dictionary>
                                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                                            </Sequence>
                                                                                          </If.Else>
                                                                                        </If>
                                                                                      </Sequence>
                                                                                    </ActivityAction>
                                                                                  </ui:ForEach.Body>
                                                                                </ui:ForEach>
                                                                                <If Condition="[boolItemsExtracted]" DisplayName="If Line Items were extracted" sap:VirtualizedContainerService.HintSize="738,592" sap2010:WorkflowViewState.IdRef="If_76">
                                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                    </scg:Dictionary>
                                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                                  <If.Then>
                                                                                    <Sequence sap:VirtualizedContainerService.HintSize="376,410" sap2010:WorkflowViewState.IdRef="Sequence_192">
                                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                        </scg:Dictionary>
                                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_102" Level="Warn" Message="[&quot;Line items were extracted: &quot; + strItems]" />
                                                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_103" Level="Warn" Message="[&quot;OCR #2 - Line Items Confidence extractor: &quot; + (CDec(extractionResultsOCR1.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(&quot;Items&quot;)).Select(Function(actual_field) actual_field.Values.Select(Function(val) val.Confidence))(0)(0))*100).ToString]">
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                      </ui:LogMessage>
                                                                                    </Sequence>
                                                                                  </If.Then>
                                                                                  <If.Else>
                                                                                    <Sequence sap:VirtualizedContainerService.HintSize="400,203" sap2010:WorkflowViewState.IdRef="Sequence_193">
                                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                        </scg:Dictionary>
                                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_104" Level="Warn" Message="[&quot;Date couldn't be digitally extracted.&quot;]" />
                                                                                    </Sequence>
                                                                                  </If.Else>
                                                                                </If>
                                                                                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="738,52" sap2010:WorkflowViewState.IdRef="CommentOut_30">
                                                                                  <ui:CommentOut.Body>
                                                                                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="558,746" sap2010:WorkflowViewState.IdRef="Sequence_199">
                                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                        </scg:Dictionary>
                                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                                      <Sequence DisplayName="OLD" sap:VirtualizedContainerService.HintSize="496,637" sap2010:WorkflowViewState.IdRef="Sequence_198">
                                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                          </scg:Dictionary>
                                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                                        <Assign DisplayName="Assign - Get Date" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_108">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[strDate]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strDigitalText,"(\d{1,2}(\/|-)\d{1,2}(\/|-)\d{2,4})").Value]</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                        <If Condition="[strDate.Trim = &quot;&quot;]" DisplayName="If date wasn't extracted" sap:VirtualizedContainerService.HintSize="434,182" sap2010:WorkflowViewState.IdRef="If_77">
                                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                            </scg:Dictionary>
                                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                                          <If.Then>
                                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_194">
                                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                </scg:Dictionary>
                                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                                              <Assign DisplayName="Assign - Get Date" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_109">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:String">[strDate]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strDigitalText,"(\d{4}(\/|-)\d{1,2}(\/|-|.)\d{1,2})").Value]</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                            </Sequence>
                                                                                          </If.Then>
                                                                                          <If.Else>
                                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_195">
                                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                </scg:Dictionary>
                                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                                              <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_110">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                            </Sequence>
                                                                                          </If.Else>
                                                                                        </If>
                                                                                        <If Condition="[strDate.Trim = &quot;&quot; and boolDateExtracted = False]" DisplayName="If date wasn't extracted" sap:VirtualizedContainerService.HintSize="434,182" sap2010:WorkflowViewState.IdRef="If_78">
                                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                            </scg:Dictionary>
                                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                                          <If.Then>
                                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,304" sap2010:WorkflowViewState.IdRef="Sequence_196">
                                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                </scg:Dictionary>
                                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_105" Level="Warn" Message="[&quot;Wasn't able to digitally extract the date.&quot;]" />
                                                                                              <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_111">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                            </Sequence>
                                                                                          </If.Then>
                                                                                          <If.Else>
                                                                                            <Sequence sap:VirtualizedContainerService.HintSize="400,304" sap2010:WorkflowViewState.IdRef="Sequence_197">
                                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                                </scg:Dictionary>
                                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                                              <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_112">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_106" Level="Info" Message="[&quot;Extracted date is: &quot; + strDate]" />
                                                                                            </Sequence>
                                                                                          </If.Else>
                                                                                        </If>
                                                                                      </Sequence>
                                                                                    </Sequence>
                                                                                  </ui:CommentOut.Body>
                                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                    </scg:Dictionary>
                                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                                </ui:CommentOut>
                                                                              </Sequence>
                                                                            </TryCatch.Try>
                                                                            <TryCatch.Catches>
                                                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="804,21" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                                                                                <sap:WorkflowViewStateService.ViewState>
                                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                                  </scg:Dictionary>
                                                                                </sap:WorkflowViewStateService.ViewState>
                                                                                <ActivityAction x:TypeArguments="s:Exception">
                                                                                  <ActivityAction.Argument>
                                                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                  </ActivityAction.Argument>
                                                                                  <Assign DisplayName="Assign Date Bool" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_113">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Boolean">[boolDateExtracted]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                </ActivityAction>
                                                                              </Catch>
                                                                            </TryCatch.Catches>
                                                                          </TryCatch>
                                                                        </Sequence>
                                                                      </If.Then>
                                                                      <If.Else>
                                                                        <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_202">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                        </Sequence>
                                                                      </If.Else>
                                                                    </If>
                                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_31" Level="Warn" Message="[&quot;Digital approach for OCR no. #2 done. Please find below the current extraction status: &quot; + vbNewLine +&#xA;&quot;Date extracted: &quot; + boolDateExtracted.ToString + vbNewLine +&#xA;&quot;Currency extracted: &quot; + boolCurrencyExtracted.ToString +vbNewLine +&#xA;&quot;Shop extracted: &quot; + boolShopExtracted.ToString + vbNewLine +&#xA;&quot;Items extracted: &quot; + boolItemsExtracted.ToString + vbNewLine +&#xA;&quot;Total amount extracted: &quot; + boolTotalAmountExtracted.ToString]" />
                                                                  </Sequence>
                                                                  <FlowStep.Next>
                                                                    <FlowDecision x:Name="__ReferenceID12" Condition="[boolDateExtracted = False Or&#xA;boolTotalAmountExtracted = False Or&#xA;boolItemsExtracted = False]" DisplayName="Missing info'?" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                          <av:Point x:Key="ShapeLocation">190.5,2386.5</av:Point>
                                                                          <av:Size x:Key="ShapeSize">79,87</av:Size>
                                                                          <av:PointCollection x:Key="TrueConnector">190.5,2430 100,2430 100,2514</av:PointCollection>
                                                                          <av:PointCollection x:Key="FalseConnector">269.5,2430 400,2430 400,2514</av:PointCollection>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <FlowDecision.True>
                                                                        <FlowStep x:Name="__ReferenceID15">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <av:Point x:Key="ShapeLocation">0,2514</av:Point>
                                                                              <av:Size x:Key="ShapeSize">200,52</av:Size>
                                                                              <av:PointCollection x:Key="ConnectorLocation">100,2567 100,2614</av:PointCollection>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="LogMessage_36" Level="Warn" Message="[&quot;ExtractDataWithDU is now done.&quot; + vbNewLine + &quot;Bot was not able to identify all elements.&quot; + vbNewLine + &quot;Moving the file to the Human queue folder.&quot;]">
                                                                            <sap:WorkflowViewStateService.ViewState>
                                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                              </scg:Dictionary>
                                                                            </sap:WorkflowViewStateService.ViewState>
                                                                          </ui:LogMessage>
                                                                          <FlowStep.Next>
                                                                            <FlowStep x:Name="__ReferenceID20">
                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                  <av:Point x:Key="ShapeLocation">0,2614</av:Point>
                                                                                  <av:Size x:Key="ShapeSize">200,52</av:Size>
                                                                                </scg:Dictionary>
                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                              <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" Destination="[in_Config(&quot;ToHumanFilesPath&quot;).ToString]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="MoveFile_4" Path="[in_strDocumentPath]">
                                                                                <sap:WorkflowViewStateService.ViewState>
                                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                  </scg:Dictionary>
                                                                                </sap:WorkflowViewStateService.ViewState>
                                                                              </ui:MoveFile>
                                                                            </FlowStep>
                                                                          </FlowStep.Next>
                                                                        </FlowStep>
                                                                      </FlowDecision.True>
                                                                      <FlowDecision.False>
                                                                        <FlowStep x:Name="__ReferenceID13">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <av:Point x:Key="ShapeLocation">300,2514</av:Point>
                                                                              <av:Size x:Key="ShapeSize">200,52</av:Size>
                                                                              <av:PointCollection x:Key="ConnectorLocation">400,2567 400,2614</av:PointCollection>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="LogMessage_35" Level="Info" Message="[&quot;ExtractDataWithDU is now done.&quot; + vbNewLine + &quot;All fields were identified with Approach #1 and #2.&quot;]">
                                                                            <sap:WorkflowViewStateService.ViewState>
                                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                              </scg:Dictionary>
                                                                            </sap:WorkflowViewStateService.ViewState>
                                                                          </ui:LogMessage>
                                                                          <FlowStep.Next>
                                                                            <FlowStep x:Name="__ReferenceID22">
                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                  <av:Point x:Key="ShapeLocation">300,2614</av:Point>
                                                                                  <av:Size x:Key="ShapeSize">200,52</av:Size>
                                                                                </scg:Dictionary>
                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                              <ui:MoveFile DestinationResource="{x:Null}" PathResource="{x:Null}" ContinueOnError="True" Destination="[in_Config(&quot;DoneFilesPath&quot;).ToString]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="MoveFile_6" Overwrite="True" Path="[in_strDocumentPath]">
                                                                                <sap:WorkflowViewStateService.ViewState>
                                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                  </scg:Dictionary>
                                                                                </sap:WorkflowViewStateService.ViewState>
                                                                              </ui:MoveFile>
                                                                            </FlowStep>
                                                                          </FlowStep.Next>
                                                                        </FlowStep>
                                                                      </FlowDecision.False>
                                                                    </FlowDecision>
                                                                  </FlowStep.Next>
                                                                </FlowStep>
                                                              </FlowStep.Next>
                                                            </FlowStep>
                                                          </FlowStep.Next>
                                                        </FlowStep>
                                                      </FlowDecision.True>
                                                      <FlowDecision.False>
                                                        <FlowStep x:Name="__ReferenceID11">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <av:Point x:Key="ShapeLocation">300,1994</av:Point>
                                                              <av:Size x:Key="ShapeSize">200,52</av:Size>
                                                              <av:PointCollection x:Key="ConnectorLocation">400,2047 400,2114</av:PointCollection>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="LogMessage_34" Level="Info" Message="[&quot;ExtractDataWithDU is now done.&quot; + vbNewLine + &quot;All fields were identified with Approach #1.&quot;]">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:LogMessage>
                                                          <FlowStep.Next>
                                                            <FlowStep x:Name="__ReferenceID21">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <av:Point x:Key="ShapeLocation">300,2114</av:Point>
                                                                  <av:Size x:Key="ShapeSize">200,52</av:Size>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <ui:MoveFile DestinationResource="{x:Null}" PathResource="{x:Null}" ContinueOnError="True" Destination="[in_Config(&quot;DoneFilesPath&quot;).ToString]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="MoveFile_5" Overwrite="True" Path="[in_strDocumentPath]">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </ui:MoveFile>
                                                            </FlowStep>
                                                          </FlowStep.Next>
                                                        </FlowStep>
                                                      </FlowDecision.False>
                                                    </FlowDecision>
                                                  </FlowStep.Next>
                                                </FlowStep>
                                              </FlowDecision.True>
                                              <FlowDecision.False>
                                                <FlowStep x:Name="__ReferenceID17">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <av:Point x:Key="ShapeLocation">580,1704</av:Point>
                                                      <av:Size x:Key="ShapeSize">200,52</av:Size>
                                                      <av:PointCollection x:Key="ConnectorLocation">680,1757 680,1804</av:PointCollection>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="LogMessage_37" Level="Info" Message="[&quot;ExtractDataWithDU is now done.&quot; + vbNewLine + &quot;All fields were identified with ML Approach.&quot;]">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:LogMessage>
                                                  <FlowStep.Next>
                                                    <FlowStep x:Name="__ReferenceID19">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <av:Point x:Key="ShapeLocation">580,1804</av:Point>
                                                          <av:Size x:Key="ShapeSize">200,52</av:Size>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" Destination="[in_Config(&quot;DoneFilesPath&quot;).ToString]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="MoveFile_3" Path="[in_strDocumentPath]">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </ui:MoveFile>
                                                    </FlowStep>
                                                  </FlowStep.Next>
                                                </FlowStep>
                                              </FlowDecision.False>
                                            </FlowDecision>
                                          </FlowStep.Next>
                                        </FlowStep>
                                      </FlowStep.Next>
                                    </FlowStep>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowDecision.True>
                              <FlowDecision.False>
                                <FlowStep x:Name="__ReferenceID25">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">870,1184</av:Point>
                                      <av:Size x:Key="ShapeSize">200,52</av:Size>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Throw Exception="[New BusinessRuleException(&quot;Document was not identified.&quot; + vbNewLine +&quot;Will move the item to the human queue.&quot;)]" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="Throw_2" />
                                </FlowStep>
                              </FlowDecision.False>
                            </FlowDecision>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowDecision.True>
              <FlowDecision.False>
                <FlowStep x:Name="__ReferenceID29">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">930,704</av:Point>
                      <av:Size x:Key="ShapeSize">200,52</av:Size>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Throw Exception="[New BusinessRuleException(&quot;More than 1 document was found in the processed file.&quot; + vbNewLine +&quot;Will move the item to the human queue.&quot;)]" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="Throw_3" />
                </FlowStep>
              </FlowDecision.False>
            </FlowDecision>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID9</x:Reference>
    <FlowStep x:Name="__ReferenceID30">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">730,157.5</av:Point>
          <av:Size x:Key="ShapeSize">200,52</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">830,209.5 830,267.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="LogMessage_32" Level="Info" Message="[&quot;Started ExtractDataWithDU&quot;]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
      <FlowStep.Next>
        <x:Reference>__ReferenceID10</x:Reference>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID11</x:Reference>
    <x:Reference>__ReferenceID12</x:Reference>
    <x:Reference>__ReferenceID13</x:Reference>
    <x:Reference>__ReferenceID14</x:Reference>
    <x:Reference>__ReferenceID15</x:Reference>
    <x:Reference>__ReferenceID16</x:Reference>
    <x:Reference>__ReferenceID17</x:Reference>
    <x:Reference>__ReferenceID18</x:Reference>
    <x:Reference>__ReferenceID19</x:Reference>
    <x:Reference>__ReferenceID20</x:Reference>
    <x:Reference>__ReferenceID21</x:Reference>
    <x:Reference>__ReferenceID22</x:Reference>
    <x:Reference>__ReferenceID23</x:Reference>
    <x:Reference>__ReferenceID24</x:Reference>
    <x:Reference>__ReferenceID25</x:Reference>
    <x:Reference>__ReferenceID26</x:Reference>
    <x:Reference>__ReferenceID27</x:Reference>
    <x:Reference>__ReferenceID28</x:Reference>
    <x:Reference>__ReferenceID29</x:Reference>
  </Flowchart>
</Activity>